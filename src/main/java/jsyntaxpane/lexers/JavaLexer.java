/* The following code was generated by JFlex 1.4.3 on 14-3-27 ÏÂÎç10:25 */

/*
 * Copyright 2008 Ayman Al-Sairafi ayman.alsairafi@gmail.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License
 *       at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package jsyntaxpane.lexers;


import jsyntaxpane.Token;
import jsyntaxpane.TokenType;
 

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 14-3-27 ÏÂÎç10:25 from the specification file
 * <tt>F:/Workspace/r095/jsyntaxpane/src/main/jflex/jsyntaxpane/lexers/java.flex</tt>
 */
public final class JavaLexer extends DefaultJFlexLexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int STRING = 2;
  public static final int JDOC_TAG = 8;
  public static final int JDOC = 6;
  public static final int YYINITIAL = 0;
  public static final int CHARLITERAL = 4;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2,  2,  3,  3,  4, 4
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\7\1\3\1\2\1\0\1\3\1\1\16\7\4\0\1\3\1\112"+
    "\1\24\1\0\1\6\1\112\1\114\1\25\1\100\1\101\1\5\1\116"+
    "\1\106\1\23\1\21\1\4\1\10\1\16\2\15\4\17\2\11\1\113"+
    "\1\106\1\111\1\107\1\110\1\106\1\117\1\14\1\57\1\60\1\61"+
    "\1\22\1\20\1\75\1\120\1\62\2\120\1\12\1\76\1\67\1\63"+
    "\1\70\1\120\1\73\1\65\1\72\1\77\1\66\1\74\1\13\2\120"+
    "\1\104\1\26\1\105\1\112\1\6\1\0\1\27\1\30\1\34\1\46"+
    "\1\37\1\51\1\53\1\43\1\44\1\64\1\41\1\36\1\47\1\40"+
    "\1\35\1\52\1\71\1\33\1\31\1\32\1\45\1\54\1\55\1\50"+
    "\1\42\1\56\1\102\1\115\1\103\1\106\41\7\2\0\4\6\4\0"+
    "\1\120\2\0\1\7\7\0\1\120\4\0\1\120\5\0\27\120\1\0"+
    "\37\120\1\0\u01ca\120\4\0\14\120\16\0\5\120\7\0\1\120\1\0"+
    "\1\120\21\0\160\7\5\120\1\0\2\120\2\0\4\120\10\0\1\120"+
    "\1\0\3\120\1\0\1\120\1\0\24\120\1\0\123\120\1\0\213\120"+
    "\1\0\5\7\2\0\236\120\11\0\46\120\2\0\1\120\7\0\47\120"+
    "\11\0\55\7\1\0\1\7\1\0\2\7\1\0\2\7\1\0\1\7"+
    "\10\0\33\120\5\0\3\120\15\0\4\7\7\0\1\6\4\0\13\7"+
    "\5\0\53\120\37\7\4\0\2\120\1\7\143\120\1\0\1\120\10\7"+
    "\1\0\6\7\2\120\2\7\1\0\4\7\2\120\12\7\3\120\2\0"+
    "\1\120\17\0\1\7\1\120\1\7\36\120\33\7\2\0\131\120\13\7"+
    "\1\120\16\0\12\7\41\120\11\7\2\120\4\0\1\120\5\0\26\120"+
    "\4\7\1\120\11\7\1\120\3\7\1\120\5\7\22\0\31\120\3\7"+
    "\244\0\4\7\66\120\3\7\1\120\22\7\1\120\7\7\12\120\2\7"+
    "\2\0\12\7\1\0\7\120\1\0\7\120\1\0\3\7\1\0\10\120"+
    "\2\0\2\120\2\0\26\120\1\0\7\120\1\0\1\120\3\0\4\120"+
    "\2\0\1\7\1\120\7\7\2\0\2\7\2\0\3\7\1\120\10\0"+
    "\1\7\4\0\2\120\1\0\3\120\2\7\2\0\12\7\2\120\2\6"+
    "\7\0\1\6\5\0\3\7\1\0\6\120\4\0\2\120\2\0\26\120"+
    "\1\0\7\120\1\0\2\120\1\0\2\120\1\0\2\120\2\0\1\7"+
    "\1\0\5\7\4\0\2\7\2\0\3\7\3\0\1\7\7\0\4\120"+
    "\1\0\1\120\7\0\14\7\3\120\1\7\13\0\3\7\1\0\11\120"+
    "\1\0\3\120\1\0\26\120\1\0\7\120\1\0\2\120\1\0\5\120"+
    "\2\0\1\7\1\120\10\7\1\0\3\7\1\0\3\7\2\0\1\120"+
    "\17\0\2\120\2\7\2\0\12\7\1\0\1\6\17\0\3\7\1\0"+
    "\10\120\2\0\2\120\2\0\26\120\1\0\7\120\1\0\2\120\1\0"+
    "\5\120\2\0\1\7\1\120\7\7\2\0\2\7\2\0\3\7\10\0"+
    "\2\7\4\0\2\120\1\0\3\120\2\7\2\0\12\7\1\0\1\120"+
    "\20\0\1\7\1\120\1\0\6\120\3\0\3\120\1\0\4\120\3\0"+
    "\2\120\1\0\1\120\1\0\2\120\3\0\2\120\3\0\3\120\3\0"+
    "\14\120\4\0\5\7\3\0\3\7\1\0\4\7\2\0\1\120\6\0"+
    "\1\7\16\0\12\7\11\0\1\6\7\0\3\7\1\0\10\120\1\0"+
    "\3\120\1\0\27\120\1\0\12\120\1\0\5\120\3\0\1\120\7\7"+
    "\1\0\3\7\1\0\4\7\7\0\2\7\1\0\2\120\6\0\2\120"+
    "\2\7\2\0\12\7\22\0\2\7\1\0\10\120\1\0\3\120\1\0"+
    "\27\120\1\0\12\120\1\0\5\120\2\0\1\7\1\120\7\7\1\0"+
    "\3\7\1\0\4\7\7\0\2\7\7\0\1\120\1\0\2\120\2\7"+
    "\2\0\12\7\1\0\2\120\17\0\2\7\1\0\10\120\1\0\3\120"+
    "\1\0\51\120\2\0\1\120\7\7\1\0\3\7\1\0\4\7\1\120"+
    "\10\0\1\7\10\0\2\120\2\7\2\0\12\7\12\0\6\120\2\0"+
    "\2\7\1\0\22\120\3\0\30\120\1\0\11\120\1\0\1\120\2\0"+
    "\7\120\3\0\1\7\4\0\6\7\1\0\1\7\1\0\10\7\22\0"+
    "\2\7\15\0\60\120\1\7\2\120\7\7\4\0\1\6\7\120\10\7"+
    "\1\0\12\7\47\0\2\120\1\0\1\120\2\0\2\120\1\0\1\120"+
    "\2\0\1\120\6\0\4\120\1\0\7\120\1\0\3\120\1\0\1\120"+
    "\1\0\1\120\2\0\2\120\1\0\4\120\1\7\2\120\6\7\1\0"+
    "\2\7\1\120\2\0\5\120\1\0\1\120\1\0\6\7\2\0\12\7"+
    "\2\0\2\120\42\0\1\120\27\0\2\7\6\0\12\7\13\0\1\7"+
    "\1\0\1\7\1\0\1\7\4\0\2\7\10\120\1\0\44\120\4\0"+
    "\24\7\1\0\2\7\5\120\13\7\1\0\44\7\11\0\1\7\71\0"+
    "\53\120\24\7\1\120\12\7\6\0\6\120\4\7\4\120\3\7\1\120"+
    "\3\7\2\120\7\7\3\120\4\7\15\120\14\7\1\120\17\7\2\0"+
    "\46\120\12\0\53\120\1\0\1\120\3\0\u0149\120\1\0\4\120\2\0"+
    "\7\120\1\0\1\120\1\0\4\120\2\0\51\120\1\0\4\120\2\0"+
    "\41\120\1\0\4\120\2\0\7\120\1\0\1\120\1\0\4\120\2\0"+
    "\17\120\1\0\71\120\1\0\4\120\2\0\103\120\2\0\3\7\40\0"+
    "\20\120\20\0\125\120\14\0\u026c\120\2\0\21\120\1\0\32\120\5\0"+
    "\113\120\3\0\3\6\17\0\15\120\1\0\4\120\3\7\13\0\22\120"+
    "\3\7\13\0\22\120\2\7\14\0\15\120\1\0\3\120\1\0\2\7"+
    "\14\0\64\120\40\7\3\0\1\120\3\0\1\6\1\120\1\7\2\0"+
    "\12\7\41\0\3\7\2\0\12\7\6\0\130\120\10\0\51\120\1\7"+
    "\1\120\5\0\106\120\12\0\35\120\3\0\14\7\4\0\14\7\12\0"+
    "\12\7\36\120\2\0\5\120\13\0\54\120\4\0\21\7\7\120\2\7"+
    "\6\0\12\7\46\0\27\120\5\7\4\0\65\120\12\7\1\0\35\7"+
    "\2\0\13\7\6\0\12\7\15\0\1\120\130\0\5\7\57\120\21\7"+
    "\7\120\4\0\12\7\21\0\11\7\14\0\3\7\36\120\12\7\3\0"+
    "\2\120\12\7\6\0\46\120\16\7\14\0\44\120\24\7\10\0\12\7"+
    "\3\0\3\120\12\7\44\120\122\0\3\7\1\0\25\7\4\120\1\7"+
    "\4\120\1\7\15\0\300\120\47\7\25\0\4\7\u0116\120\2\0\6\120"+
    "\2\0\46\120\2\0\6\120\2\0\10\120\1\0\1\120\1\0\1\120"+
    "\1\0\1\120\1\0\37\120\2\0\65\120\1\0\7\120\1\0\1\120"+
    "\3\0\3\120\1\0\7\120\3\0\4\120\2\0\6\120\4\0\15\120"+
    "\5\0\3\120\1\0\7\120\16\0\5\7\32\0\5\7\20\0\2\6"+
    "\23\0\1\6\13\0\5\7\5\0\6\7\1\0\1\120\15\0\1\120"+
    "\20\0\15\120\3\0\32\6\26\0\15\7\4\0\1\7\3\0\14\7"+
    "\21\0\1\120\4\0\1\120\2\0\12\120\1\0\1\120\3\0\5\120"+
    "\6\0\1\120\1\0\1\120\1\0\1\120\1\0\4\120\1\0\13\120"+
    "\2\0\4\120\5\0\5\120\4\0\1\120\21\0\43\6\2\120\4\6"+
    "\u0a77\0\57\120\1\0\57\120\1\0\205\120\6\0\4\120\3\7\16\0"+
    "\46\120\12\0\66\120\11\0\1\120\17\0\1\7\27\120\11\0\7\120"+
    "\1\0\7\120\1\0\7\120\1\0\7\120\1\0\7\120\1\0\7\120"+
    "\1\0\7\120\1\0\7\120\1\0\40\7\57\0\1\120\u01d5\0\2\120"+
    "\1\6\31\0\11\6\6\7\1\0\5\120\2\0\3\6\2\120\4\0"+
    "\126\120\2\0\2\7\2\0\3\120\1\0\132\120\1\0\4\120\5\0"+
    "\51\120\3\0\136\120\21\0\33\120\65\0\20\120\u0200\0\u19b6\120\112\0"+
    "\u51cc\120\64\0\u048d\120\103\0\56\120\2\0\u010d\120\3\0\20\120\12\7"+
    "\2\120\24\0\57\120\1\7\14\0\2\7\1\0\31\120\10\0\106\120"+
    "\12\6\2\7\45\0\11\120\2\0\147\120\2\0\4\120\1\0\2\120"+
    "\16\0\12\120\120\0\10\120\1\7\3\120\1\7\4\120\1\7\27\120"+
    "\5\7\20\0\1\6\7\0\64\120\14\0\2\7\62\120\21\7\13\0"+
    "\12\7\6\0\22\7\6\120\3\0\1\120\4\0\12\7\34\120\10\7"+
    "\2\0\27\120\15\7\14\0\35\120\3\0\4\7\57\120\16\7\16\0"+
    "\1\120\12\7\46\0\51\120\16\7\11\0\3\120\1\7\10\120\2\7"+
    "\2\0\12\7\6\0\27\120\3\0\1\120\1\7\4\0\60\120\1\7"+
    "\1\120\3\7\2\120\2\7\5\120\2\7\1\120\1\7\1\120\30\0"+
    "\3\120\43\0\6\120\2\0\6\120\2\0\6\120\11\0\7\120\1\0"+
    "\7\120\221\0\43\120\10\7\1\0\2\7\2\0\12\7\6\0\u2ba4\120"+
    "\14\0\27\120\4\0\61\120\u2104\0\u012e\120\2\0\76\120\2\0\152\120"+
    "\46\0\7\120\14\0\5\120\5\0\1\120\1\7\12\120\1\0\15\120"+
    "\1\0\5\120\1\0\1\120\1\0\2\120\1\0\2\120\1\0\154\120"+
    "\41\0\u016b\120\22\0\100\120\2\0\66\120\50\0\14\120\1\6\3\0"+
    "\20\7\20\0\7\7\14\0\2\6\30\0\3\6\31\0\1\6\6\0"+
    "\5\120\1\0\207\120\2\0\1\7\4\0\1\6\13\0\12\7\7\0"+
    "\32\120\4\0\1\6\1\0\32\120\13\0\131\120\3\0\6\120\2\0"+
    "\6\120\2\0\6\120\2\0\3\120\3\0\2\6\3\0\2\6\22\0"+
    "\3\7\4\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\5\0\3\1\2\2\1\3\2\4\2\3\1\2\1\3"+
    "\1\2\1\5\1\6\35\3\1\7\1\10\1\11\1\12"+
    "\1\13\1\14\6\2\1\15\2\16\1\17\1\1\1\15"+
    "\1\1\2\20\1\21\2\22\1\15\1\23\1\0\3\4"+
    "\1\0\3\4\1\0\35\3\2\24\40\3\1\2\1\25"+
    "\2\15\1\26\1\15\2\23\1\0\1\27\4\4\1\0"+
    "\34\3\1\24\47\3\2\0\2\4\35\3\1\30\30\3"+
    "\2\4\3\3\1\31\6\3\1\24\7\3\1\24\4\3"+
    "\1\30\23\3\2\4\30\3\1\30\5\3\1\30\3\3"+
    "\2\4\33\3\1\32\1\3\2\4\27\3\2\4\1\3"+
    "\1\33\24\3\2\4\20\3\1\0\1\4\11\3\1\0"+
    "\1\4\10\3\1\0\1\4\6\3\1\0\1\4\3\3"+
    "\1\0\1\4\1\3\1\0\1\4\1\0\1\4\1\0"+
    "\5\4";

  private static int [] zzUnpackAction() {
    int [] result = new int[514];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\121\0\242\0\363\0\u0144\0\u0195\0\u01e6\0\u0237"+
    "\0\u0288\0\u02d9\0\u032a\0\u037b\0\u03cc\0\u041d\0\u046e\0\u04bf"+
    "\0\u0510\0\u0561\0\u0195\0\u0195\0\u05b2\0\u0603\0\u0654\0\u06a5"+
    "\0\u06f6\0\u0747\0\u0798\0\u07e9\0\u083a\0\u088b\0\u08dc\0\u092d"+
    "\0\u097e\0\u09cf\0\u0a20\0\u0a71\0\u0ac2\0\u0b13\0\u0b64\0\u0bb5"+
    "\0\u0c06\0\u0c57\0\u0ca8\0\u0cf9\0\u0d4a\0\u0d9b\0\u0dec\0\u0e3d"+
    "\0\u0e8e\0\u0195\0\u0195\0\u0195\0\u0195\0\u0195\0\u0195\0\u0195"+
    "\0\u0edf\0\u0f30\0\u0f81\0\u0fd2\0\u1023\0\u1074\0\u10c5\0\u0195"+
    "\0\u0195\0\u1116\0\u1167\0\u11b8\0\u0195\0\u1209\0\u0195\0\u0195"+
    "\0\u1209\0\u125a\0\u12ab\0\u12fc\0\u134d\0\u139e\0\u0195\0\u13ef"+
    "\0\u1440\0\u1491\0\u14e2\0\u1533\0\u1584\0\u15d5\0\u1626\0\u1677"+
    "\0\u16c8\0\u1719\0\u176a\0\u17bb\0\u180c\0\u185d\0\u18ae\0\u18ff"+
    "\0\u1950\0\u19a1\0\u19f2\0\u1a43\0\u1a94\0\u1ae5\0\u1b36\0\u1b87"+
    "\0\u1bd8\0\u1c29\0\u1c7a\0\u1ccb\0\u1d1c\0\u1d6d\0\u1dbe\0\u1e0f"+
    "\0\u1e60\0\u032a\0\u1eb1\0\u1f02\0\u1f53\0\u1fa4\0\u1ff5\0\u2046"+
    "\0\u2097\0\u20e8\0\u2139\0\u218a\0\u21db\0\u222c\0\u227d\0\u22ce"+
    "\0\u231f\0\u2370\0\u23c1\0\u2412\0\u2463\0\u24b4\0\u2505\0\u2556"+
    "\0\u25a7\0\u25f8\0\u2649\0\u269a\0\u26eb\0\u273c\0\u278d\0\u27de"+
    "\0\u282f\0\u2880\0\u28d1\0\u2922\0\u0195\0\u2973\0\u29c4\0\u0195"+
    "\0\u0195\0\u2a15\0\u0195\0\u2a66\0\u2ab7\0\u2b08\0\u2b59\0\u2baa"+
    "\0\u2bfb\0\u2c4c\0\u2c9d\0\u2cee\0\u2d3f\0\u2d90\0\u2de1\0\u2e32"+
    "\0\u2e83\0\u2ed4\0\u2f25\0\u2f76\0\u2fc7\0\u3018\0\u3069\0\u30ba"+
    "\0\u310b\0\u315c\0\u31ad\0\u31fe\0\u324f\0\u32a0\0\u32f1\0\u3342"+
    "\0\u3393\0\u33e4\0\u3435\0\u3486\0\u34d7\0\u3528\0\u3579\0\u35ca"+
    "\0\u361b\0\u366c\0\u36bd\0\u370e\0\u375f\0\u37b0\0\u3801\0\u3852"+
    "\0\u38a3\0\u38f4\0\u3945\0\u3996\0\u39e7\0\u3a38\0\u3a89\0\u3ada"+
    "\0\u3b2b\0\u3b7c\0\u3bcd\0\u3c1e\0\u3c6f\0\u3cc0\0\u3d11\0\u3d62"+
    "\0\u3db3\0\u3e04\0\u3e55\0\u3ea6\0\u3ef7\0\u3f48\0\u3f99\0\u3fea"+
    "\0\u403b\0\u408c\0\u40dd\0\u412e\0\u417f\0\u41d0\0\u4221\0\u2ab7"+
    "\0\u4272\0\u42c3\0\u4314\0\u4365\0\u43b6\0\u4407\0\u4458\0\u44a9"+
    "\0\u44fa\0\u454b\0\u459c\0\u45ed\0\u463e\0\u468f\0\u46e0\0\u4731"+
    "\0\u4782\0\u47d3\0\u4824\0\u4875\0\u48c6\0\u4917\0\u4968\0\u49b9"+
    "\0\u4a0a\0\u4a5b\0\u4aac\0\u4afd\0\u4b4e\0\u4b9f\0\u4bf0\0\u032a"+
    "\0\u4c41\0\u4c92\0\u4ce3\0\u4d34\0\u4d85\0\u4dd6\0\u4e27\0\u4e78"+
    "\0\u4ec9\0\u4f1a\0\u4f6b\0\u4fbc\0\u500d\0\u505e\0\u50af\0\u5100"+
    "\0\u5151\0\u51a2\0\u51f3\0\u5244\0\u5295\0\u52e6\0\u5337\0\u5388"+
    "\0\u53d9\0\u542a\0\u547b\0\u54cc\0\u551d\0\u032a\0\u556e\0\u55bf"+
    "\0\u5610\0\u5661\0\u56b2\0\u5703\0\u31fe\0\u5754\0\u57a5\0\u57f6"+
    "\0\u5847\0\u5898\0\u58e9\0\u593a\0\u598b\0\u59dc\0\u5a2d\0\u5a7e"+
    "\0\u5acf\0\u5b20\0\u5b71\0\u5bc2\0\u5c13\0\u5c64\0\u5cb5\0\u5d06"+
    "\0\u5d57\0\u5da8\0\u5df9\0\u5e4a\0\u5e9b\0\u5eec\0\u5f3d\0\u5f8e"+
    "\0\u5fdf\0\u6030\0\u6081\0\u60d2\0\u6123\0\u6174\0\u61c5\0\u6216"+
    "\0\u6267\0\u62b8\0\u6309\0\u635a\0\u63ab\0\u63fc\0\u644d\0\u649e"+
    "\0\u64ef\0\u6540\0\u6591\0\u65e2\0\u6633\0\u6684\0\u66d5\0\u6726"+
    "\0\u6777\0\u67c8\0\u6819\0\u686a\0\u68bb\0\u690c\0\u695d\0\u69ae"+
    "\0\u69ff\0\u6a50\0\u6aa1\0\u6af2\0\u6b43\0\u6b94\0\u6be5\0\u6c36"+
    "\0\u6c87\0\u6cd8\0\u6d29\0\u6d7a\0\u6dcb\0\u6e1c\0\u6e6d\0\u6ebe"+
    "\0\u6f0f\0\u6f60\0\u6fb1\0\u7002\0\u7053\0\u70a4\0\u70f5\0\u7146"+
    "\0\u7197\0\u71e8\0\u7239\0\u728a\0\u72db\0\u732c\0\u737d\0\u73ce"+
    "\0\u741f\0\u7470\0\u74c1\0\u7512\0\u7563\0\u75b4\0\u032a\0\u7605"+
    "\0\u7656\0\u76a7\0\u76f8\0\u7749\0\u779a\0\u77eb\0\u783c\0\u788d"+
    "\0\u78de\0\u792f\0\u7980\0\u79d1\0\u7a22\0\u7a73\0\u7ac4\0\u7b15"+
    "\0\u7b66\0\u7bb7\0\u7c08\0\u7c59\0\u7caa\0\u7cfb\0\u7d4c\0\u7d9d"+
    "\0\u7dee\0\u7e3f\0\u7e90\0\u7ee1\0\u032a\0\u7f32\0\u7f83\0\u7fd4"+
    "\0\u8025\0\u8076\0\u80c7\0\u8118\0\u8169\0\u81ba\0\u820b\0\u825c"+
    "\0\u82ad\0\u82fe\0\u834f\0\u83a0\0\u83f1\0\u8442\0\u8493\0\u84e4"+
    "\0\u8535\0\u8586\0\u85d7\0\u8628\0\u8679\0\u86ca\0\u871b\0\u876c"+
    "\0\u87bd\0\u880e\0\u885f\0\u88b0\0\u8901\0\u8952\0\u89a3\0\u89f4"+
    "\0\u8a45\0\u8a96\0\u8ae7\0\u8b38\0\u8b89\0\u8bda\0\u8c2b\0\u8c7c"+
    "\0\u8ccd\0\u8d1e\0\u8d6f\0\u8dc0\0\u8e11\0\u8e62\0\u8eb3\0\u8f04"+
    "\0\u8f55\0\u8fa6\0\u8ff7\0\u9048\0\u9099\0\u90ea\0\u913b\0\u918c"+
    "\0\u91dd\0\u922e\0\u927f\0\u92d0\0\u9321\0\u9372\0\u93c3\0\u9414"+
    "\0\u9465\0\u94b6\0\u9507\0\u9558\0\u95a9\0\u95fa\0\u964b\0\u969c"+
    "\0\u96ed\0\u973e\0\u978f\0\u97e0\0\u9831\0\u9882\0\u98d3\0\u9924"+
    "\0\u9975\0\u99c6";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[514];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\6\1\7\1\6\1\10\1\11\1\12\1\13\1\6"+
    "\1\14\1\15\2\13\1\16\3\15\1\17\1\20\1\21"+
    "\1\22\1\23\1\24\1\6\1\25\1\26\1\27\1\30"+
    "\1\31\1\32\1\13\1\33\1\34\1\35\3\13\1\36"+
    "\1\13\1\37\2\13\1\40\1\41\1\42\1\43\1\44"+
    "\1\13\1\45\1\46\1\47\1\50\1\51\1\13\1\52"+
    "\1\53\1\54\1\55\1\13\1\56\1\57\1\60\2\13"+
    "\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70"+
    "\1\12\1\71\1\72\1\12\1\70\1\73\1\74\1\75"+
    "\1\6\1\13\1\76\1\77\1\100\21\76\1\101\1\76"+
    "\1\102\72\76\1\103\1\77\1\100\22\103\1\101\1\104"+
    "\72\103\5\105\1\106\111\105\1\107\1\105\5\110\1\111"+
    "\4\110\3\112\3\110\1\112\1\110\1\112\4\110\51\112"+
    "\20\110\1\112\123\0\1\6\121\0\1\10\121\0\1\113"+
    "\1\114\101\0\1\70\120\0\1\70\17\0\13\13\1\0"+
    "\1\13\4\0\51\13\20\0\1\13\10\0\1\115\1\116"+
    "\1\117\1\120\1\0\1\121\1\122\1\121\1\117\1\123"+
    "\1\124\13\0\1\117\1\124\6\0\1\117\1\0\1\120"+
    "\1\117\7\0\1\117\47\0\2\15\1\117\2\0\3\15"+
    "\1\117\1\123\1\124\13\0\1\117\1\124\6\0\1\117"+
    "\2\0\1\117\7\0\1\117\45\0\13\13\1\0\1\13"+
    "\4\0\4\13\1\125\44\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\7\13\1\126\41\13\20\0\1\13"+
    "\10\0\2\123\3\0\3\123\107\0\13\13\1\0\1\13"+
    "\4\0\21\13\1\127\22\13\1\130\4\13\20\0\1\13"+
    "\23\0\1\70\63\0\1\70\17\0\13\13\1\0\1\13"+
    "\4\0\1\13\1\131\47\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\4\13\1\132\1\13\1\133\4\13"+
    "\1\134\35\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\3\13\1\135\7\13\1\136\1\137\1\13\1\140"+
    "\7\13\1\141\22\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\4\13\1\142\7\13\1\143\34\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\10\13\1\144"+
    "\40\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\1\145\5\13\1\146\1\147\4\13\1\150\34\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\6\13\1\151"+
    "\42\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\7\13\1\152\1\13\1\153\7\13\1\154\27\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\1\155\7\13"+
    "\1\156\5\13\1\157\32\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\11\13\1\160\6\13\1\161\1\13"+
    "\1\162\26\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\6\13\1\163\1\13\1\164\40\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\1\165\5\13\1\166"+
    "\1\167\5\13\1\170\33\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\1\171\3\13\1\172\11\13\1\173"+
    "\32\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\6\13\1\174\42\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\6\13\1\175\42\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\14\13\1\176\34\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\6\13\1\177"+
    "\4\13\1\200\35\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\6\13\1\201\1\202\4\13\1\203\34\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\6\13"+
    "\1\204\42\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\7\13\1\205\1\13\1\206\37\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\1\13\1\207\47\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\3\13"+
    "\1\210\4\13\1\211\3\13\1\212\34\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\6\13\1\213\42\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\6\13"+
    "\1\214\1\13\1\215\5\13\1\216\32\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\1\217\50\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\14\13\1\220"+
    "\34\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\16\13\1\221\32\13\20\0\1\13\6\0\6\13\1\222"+
    "\4\13\1\0\1\13\4\0\51\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\11\13\1\223\37\13\20\0"+
    "\1\13\107\0\1\70\1\224\117\0\1\70\1\0\1\12"+
    "\116\0\1\70\4\0\1\70\113\0\1\70\5\0\1\70"+
    "\112\0\1\70\6\0\1\70\2\0\1\76\2\0\21\76"+
    "\1\0\1\76\1\0\72\76\2\0\1\100\116\0\2\225"+
    "\1\0\5\225\1\226\4\225\2\226\1\227\101\225\1\103"+
    "\2\0\22\103\2\0\72\103\2\225\1\0\116\225\4\0"+
    "\1\230\126\0\3\112\3\0\1\112\1\0\1\112\4\0"+
    "\51\112\13\0\1\231\4\0\1\112\1\113\1\232\1\233"+
    "\116\113\5\234\1\235\113\234\10\0\1\115\1\116\1\117"+
    "\2\0\1\121\1\122\1\121\1\117\1\123\1\124\13\0"+
    "\1\117\1\124\6\0\1\117\2\0\1\117\7\0\1\117"+
    "\47\0\2\116\3\0\3\116\1\117\1\123\1\124\14\0"+
    "\1\124\6\0\1\117\2\0\1\117\7\0\1\117\47\0"+
    "\1\236\1\237\2\0\5\237\1\0\1\237\4\0\2\237"+
    "\3\0\1\237\2\0\1\237\6\0\1\237\2\0\1\237"+
    "\5\0\3\237\47\0\1\240\1\116\1\117\2\0\3\240"+
    "\1\117\1\123\1\124\13\0\1\117\1\124\6\0\1\117"+
    "\2\0\1\117\7\0\1\117\47\0\1\121\1\116\1\117"+
    "\2\0\3\121\1\117\1\123\1\124\13\0\1\117\1\124"+
    "\6\0\1\117\2\0\1\117\7\0\1\117\47\0\2\123"+
    "\3\0\3\123\1\117\1\0\1\124\14\0\1\124\6\0"+
    "\1\117\2\0\1\117\7\0\1\117\47\0\2\241\3\0"+
    "\3\241\3\0\1\242\72\0\1\242\10\0\13\13\1\0"+
    "\1\13\4\0\4\13\1\243\10\13\1\244\33\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\6\13\1\245"+
    "\42\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\5\13\1\246\43\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\44\13\1\247\4\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\2\13\1\250\46\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\10\13\1\251"+
    "\40\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\6\13\1\252\42\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\3\13\1\253\45\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\1\254\3\13\1\255\44\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\11\13"+
    "\1\256\37\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\6\13\1\257\42\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\23\13\1\260\25\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\15\13\1\261\33\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\1\262"+
    "\12\13\1\162\2\13\1\253\32\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\4\13\1\263\10\13\1\264"+
    "\33\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\3\13\1\265\45\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\2\13\1\253\1\266\45\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\11\13\1\267\37\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\1\270"+
    "\50\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\1\166\50\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\11\13\1\271\37\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\2\13\1\253\46\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\16\13\1\272\32\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\3\13"+
    "\1\273\45\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\3\13\1\274\45\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\26\13\1\162\22\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\7\13\1\275\41\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\2\13"+
    "\1\276\1\277\45\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\23\13\1\300\25\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\16\13\1\301\32\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\22\13\1\302"+
    "\26\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\7\13\1\152\41\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\4\13\1\162\44\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\6\13\1\303\42\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\11\13\1\304"+
    "\37\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\5\13\1\305\43\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\6\13\1\306\6\13\1\307\33\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\1\13\1\310"+
    "\47\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\3\13\1\311\45\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\7\13\1\312\5\13\1\313\33\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\15\13\1\314"+
    "\33\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\6\13\1\315\42\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\3\13\1\316\45\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\20\13\1\317\30\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\1\320\5\13"+
    "\1\321\42\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\1\322\50\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\16\13\1\323\32\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\7\13\1\324\41\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\2\13\1\325"+
    "\1\326\13\13\1\327\31\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\35\13\1\330\13\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\4\13\1\331\44\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\4\13"+
    "\1\332\1\333\43\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\6\13\1\334\42\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\15\13\1\335\33\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\36\13\1\336"+
    "\12\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\24\13\1\337\24\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\7\13\1\340\10\13\1\341\30\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\5\13\1\342"+
    "\43\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\4\13\1\343\44\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\11\13\1\344\37\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\44\13\1\345\4\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\2\13\1\346"+
    "\46\13\20\0\1\13\107\0\1\70\1\12\20\0\1\227"+
    "\4\0\3\227\111\0\1\231\4\0\3\231\103\0\1\233"+
    "\116\0\5\234\1\347\113\234\4\0\1\233\1\350\123\0"+
    "\1\236\1\237\1\117\1\0\5\237\1\0\1\237\4\0"+
    "\2\237\3\0\1\237\1\0\1\117\1\237\6\0\1\237"+
    "\2\0\1\237\5\0\3\237\47\0\2\351\1\117\1\0"+
    "\5\351\1\0\1\351\4\0\2\351\3\0\1\351\1\0"+
    "\1\117\1\351\6\0\1\351\2\0\1\351\5\0\3\351"+
    "\47\0\1\352\1\116\1\117\2\0\3\352\1\117\1\123"+
    "\1\124\13\0\1\117\1\124\6\0\1\117\2\0\1\117"+
    "\7\0\1\117\47\0\2\241\3\0\3\241\1\117\25\0"+
    "\1\117\2\0\1\117\7\0\1\117\47\0\2\241\3\0"+
    "\3\241\107\0\13\13\1\0\1\13\4\0\1\353\50\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\3\13"+
    "\1\354\45\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\1\355\50\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\10\13\1\356\40\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\34\13\1\357\14\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\3\13\1\360"+
    "\45\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\1\361\50\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\7\13\1\362\41\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\10\13\1\162\40\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\3\13\1\363\45\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\15\13"+
    "\1\364\33\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\5\13\1\365\43\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\4\13\1\366\44\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\10\13\1\166\40\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\3\13"+
    "\1\266\45\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\11\13\1\367\37\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\6\13\1\370\42\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\2\13\1\162\46\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\16\13"+
    "\1\371\32\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\5\13\1\372\43\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\2\13\1\366\1\373\45\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\2\13\1\264"+
    "\46\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\24\13\1\162\24\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\20\13\1\162\30\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\10\13\1\374\40\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\15\13\1\375"+
    "\33\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\7\13\1\162\41\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\3\13\1\376\45\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\10\13\1\377\40\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\6\13\1\257"+
    "\1\u0100\41\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\1\13\1\314\47\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\1\u0101\50\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\1\366\50\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\1\u0102\50\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\12\13\1\u0103"+
    "\36\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\3\13\1\u0104\45\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\25\13\1\u0105\23\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\7\13\1\363\41\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\6\13\1\162"+
    "\42\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\1\u0106\50\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\17\13\1\162\31\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\7\13\1\253\41\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\7\13\1\u0107\41\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\10\13"+
    "\1\u0108\40\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\23\13\1\u0109\25\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\2\13\1\u010a\46\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\11\13\1\u010b\37\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\4\13"+
    "\1\u010c\44\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\1\13\1\u010d\47\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\10\13\1\u010e\40\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\3\13\1\u010f\45\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\10\13"+
    "\1\u0110\40\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\10\13\1\u0111\40\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\10\13\1\u0112\40\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\15\13\1\u0113\33\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\15\13"+
    "\1\u0114\33\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\16\13\1\u0115\32\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\4\13\1\355\44\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\17\13\1\u0108\31\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\16\13"+
    "\1\u0116\32\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\1\u0117\50\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\7\13\1\u0118\41\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\1\13\1\u0119\47\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\12\13\1\u011a"+
    "\36\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\6\13\1\u011b\1\13\1\u011c\40\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\3\13\1\u011d\5\13\1\u011e"+
    "\37\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\40\13\1\u011f\10\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\16\13\1\u0120\32\13\20\0\1\13\4\234"+
    "\1\233\1\347\113\234\10\0\2\u0121\1\117\1\0\5\u0121"+
    "\1\0\1\u0121\4\0\2\u0121\3\0\1\u0121\1\0\1\117"+
    "\1\u0121\6\0\1\u0121\2\0\1\u0121\5\0\3\u0121\47\0"+
    "\1\u0122\1\116\1\117\2\0\3\u0122\1\117\1\123\1\124"+
    "\13\0\1\117\1\124\6\0\1\117\2\0\1\117\7\0"+
    "\1\117\45\0\13\13\1\0\1\13\4\0\13\13\1\u0123"+
    "\35\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\14\13\1\u0124\34\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\3\13\1\u0108\45\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\23\13\1\u0125\25\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\44\13\1\u0126"+
    "\4\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\4\13\1\u0127\44\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\12\13\1\162\36\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\10\13\1\u0128\40\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\15\13\1\u0129"+
    "\33\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\5\13\1\u012a\43\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\14\13\1\u012b\34\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\3\13\1\162\45\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\2\13\1\u012c"+
    "\46\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\26\13\1\u012d\22\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\4\13\1\u012e\44\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\14\13\1\162\34\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\15\13\1\u012f"+
    "\33\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\11\13\1\u0130\37\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\25\13\1\253\23\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\1\u0131\50\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\4\13\1\u0132\44\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\10\13"+
    "\1\u0133\40\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\16\13\1\u0134\32\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\7\13\1\u0135\41\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\1\u0136\50\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\10\13\1\u0137"+
    "\40\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\1\134\50\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\3\13\1\176\45\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\10\13\1\u0138\40\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\1\u0139\50\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\2\13\1\u013a"+
    "\46\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\10\13\1\u013b\40\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\1\u013c\35\13\1\u013d\12\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\7\13\1\316\41\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\24\13"+
    "\1\u013e\24\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\1\u013f\50\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\4\13\1\u0140\17\13\1\u0141\24\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\21\13\1\u0142"+
    "\27\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\5\13\1\355\43\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\11\13\1\u0143\37\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\1\u0144\50\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\4\13\1\u0145\44\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\5\13"+
    "\1\u0146\43\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\3\13\1\u0147\45\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\41\13\1\u0148\7\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\10\13\1\u0149\40\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\1\u014a"+
    "\50\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\26\13\1\u011e\22\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\1\335\50\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\15\13\1\u014b\33\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\1\323\50\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\33\13\1\u014c"+
    "\15\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\23\13\1\u014d\25\13\20\0\1\13\10\0\2\u014e\1\117"+
    "\1\0\5\u014e\1\0\1\u014e\4\0\2\u014e\3\0\1\u014e"+
    "\1\0\1\117\1\u014e\6\0\1\u014e\2\0\1\u014e\5\0"+
    "\3\u014e\47\0\1\u014f\1\116\1\117\2\0\3\u014f\1\117"+
    "\1\123\1\124\13\0\1\117\1\124\6\0\1\117\2\0"+
    "\1\117\7\0\1\117\45\0\13\13\1\0\1\13\4\0"+
    "\33\13\1\u0150\15\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\20\13\1\u0151\30\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\3\13\1\u0152\45\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\1\u0153\50\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\1\u012e"+
    "\50\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\5\13\1\162\43\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\3\13\1\u0154\45\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\4\13\1\u0155\44\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\15\13\1\u0156"+
    "\33\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\11\13\1\162\37\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\11\13\1\u0157\37\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\17\13\1\264\31\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\11\13\1\u0158"+
    "\37\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\22\13\1\u0159\26\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\20\13\1\u015a\30\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\7\13\1\366\41\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\7\13\1\u015b"+
    "\41\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\24\13\1\253\24\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\5\13\1\u015c\43\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\1\u015d\50\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\4\13\1\u011e\44\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\31\13"+
    "\1\u015e\6\13\1\u015f\10\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\1\323\37\13\1\u0160\10\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\5\13\1\u0161"+
    "\43\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\10\13\1\u0162\40\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\1\u0163\50\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\11\13\1\u0164\37\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\4\13\1\u0165\44\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\10\13"+
    "\1\u0166\40\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\34\13\1\u0167\14\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\24\13\1\u0168\24\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\7\13\1\u0169\41\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\15\13"+
    "\1\u016a\33\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\14\13\1\u016b\34\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\15\13\1\u016c\33\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\6\13\1\u016d\42\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\4\13"+
    "\1\u016e\44\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\24\13\1\316\24\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\20\13\1\u016f\30\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\40\13\1\u0170\10\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\23\13"+
    "\1\u0171\25\13\20\0\1\13\10\0\2\u0172\1\117\1\0"+
    "\5\u0172\1\0\1\u0172\4\0\2\u0172\3\0\1\u0172\1\0"+
    "\1\117\1\u0172\6\0\1\u0172\2\0\1\u0172\5\0\3\u0172"+
    "\47\0\1\u0173\1\116\1\117\2\0\3\u0173\1\117\1\123"+
    "\1\124\13\0\1\117\1\124\6\0\1\117\2\0\1\117"+
    "\7\0\1\117\45\0\13\13\1\0\1\13\4\0\11\13"+
    "\1\u0174\37\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\10\13\1\u0175\40\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\15\13\1\u0176\33\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\5\13\1\366\43\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\22\13"+
    "\1\u0177\26\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\6\13\1\u0178\42\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\10\13\1\u0179\40\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\16\13\1\253\32\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\5\13"+
    "\1\u017a\43\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\1\u017b\50\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\10\13\1\u017c\40\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\13\13\1\162\35\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\3\13\1\u017d"+
    "\45\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\11\13\1\u0108\37\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\1\u017e\50\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\6\13\1\u017f\42\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\6\13\1\u0180\42\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\3\13"+
    "\1\u0141\45\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\42\13\1\u0181\6\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\7\13\1\u0182\41\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\3\13\1\u0183\45\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\16\13"+
    "\1\u0184\32\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\4\13\1\u0108\44\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\16\13\1\u0185\32\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\30\13\1\u0186\2\13"+
    "\1\u0150\15\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\15\13\1\u0187\33\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\3\13\1\u0188\45\13\20\0\1\13"+
    "\6\0\12\13\1\u0189\1\0\1\13\4\0\47\13\1\u018a"+
    "\1\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\25\13\1\u018b\23\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\15\13\1\u018c\33\13\20\0\1\13\6\0"+
    "\12\13\1\u018d\1\0\1\13\4\0\51\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\10\13\1\u018e\40\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\46\13"+
    "\1\u018f\2\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\6\13\1\u0190\42\13\20\0\1\13\10\0\2\u0191"+
    "\1\117\1\0\5\u0191\1\0\1\u0191\4\0\2\u0191\3\0"+
    "\1\u0191\1\0\1\117\1\u0191\6\0\1\u0191\2\0\1\u0191"+
    "\5\0\3\u0191\47\0\1\u0192\1\116\1\117\2\0\3\u0192"+
    "\1\117\1\123\1\124\13\0\1\117\1\124\6\0\1\117"+
    "\2\0\1\117\7\0\1\117\45\0\13\13\1\0\1\13"+
    "\4\0\17\13\1\327\31\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\3\13\1\u0193\45\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\6\13\1\u0194\42\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\23\13"+
    "\1\162\25\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\11\13\1\u0195\37\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\11\13\1\366\37\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\10\13\1\u0196\40\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\5\13"+
    "\1\253\43\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\11\13\1\u0197\37\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\10\13\1\313\40\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\2\13\1\u0198\46\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\3\13"+
    "\1\u0199\45\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\3\13\1\u019a\45\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\16\13\1\u019b\32\13\20\0\1\13"+
    "\6\0\6\13\1\u019c\4\13\1\0\1\13\4\0\36\13"+
    "\1\u019d\4\13\1\u019e\5\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\15\13\1\u019f\33\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\23\13\1\u01a0\25\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\3\13"+
    "\1\u01a1\45\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\16\13\1\u01a2\32\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\27\13\1\u011e\21\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\13\13\1\u018e\35\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\15\13"+
    "\1\u01a3\33\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\10\13\1\u01a4\40\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\10\13\1\u01a5\40\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\11\13\1\u01a6\37\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\6\13"+
    "\1\u01a7\42\13\20\0\1\13\6\0\13\13\1\0\1\u01a8"+
    "\4\0\51\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\4\13\1\u01a9\44\13\20\0\1\13\10\0\2\u01aa"+
    "\1\117\1\0\5\u01aa\1\0\1\u01aa\4\0\2\u01aa\3\0"+
    "\1\u01aa\1\0\1\117\1\u01aa\6\0\1\u01aa\2\0\1\u01aa"+
    "\5\0\3\u01aa\47\0\1\u01ab\1\116\1\117\2\0\3\u01ab"+
    "\1\117\1\123\1\124\13\0\1\117\1\124\6\0\1\117"+
    "\2\0\1\117\7\0\1\117\45\0\13\13\1\0\1\13"+
    "\4\0\15\13\1\u01ac\33\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\11\13\1\u01ad\37\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\15\13\1\u01ae\33\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\6\13"+
    "\1\u01af\42\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\3\13\1\264\45\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\3\13\1\u018e\45\13\20\0\1\13"+
    "\6\0\12\13\1\u01b0\1\0\1\13\4\0\51\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\36\13\1\u01b1"+
    "\12\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\10\13\1\u01b2\40\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\4\13\1\u01b3\1\u01b4\43\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\3\13\1\u01b5\45\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\14\13"+
    "\1\u01b6\34\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\1\u01b7\50\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\3\13\1\u01b8\45\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\34\13\1\u01b9\14\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\15\13\1\u01ba"+
    "\4\13\1\u01bb\26\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\10\13\1\u01bc\40\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\3\13\1\u01bd\45\13\20\0"+
    "\1\13\6\0\6\13\1\u01be\4\13\1\0\1\13\4\0"+
    "\51\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\3\13\1\u01bf\45\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\4\13\1\u01c0\44\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\21\13\1\127\27\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\3\13\1\u01c1"+
    "\45\13\20\0\1\13\10\0\2\u01c2\1\117\1\0\5\u01c2"+
    "\1\0\1\u01c2\4\0\2\u01c2\3\0\1\u01c2\1\0\1\117"+
    "\1\u01c2\6\0\1\u01c2\2\0\1\u01c2\5\0\3\u01c2\47\0"+
    "\1\u01c3\1\116\1\117\2\0\3\u01c3\1\117\1\123\1\124"+
    "\13\0\1\117\1\124\6\0\1\117\2\0\1\117\7\0"+
    "\1\117\45\0\13\13\1\0\1\13\4\0\5\13\1\u018e"+
    "\43\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\27\13\1\u017d\21\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\22\13\1\162\26\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\6\13\1\u01c4\42\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\16\13\1\u01c5"+
    "\32\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\11\13\1\u01c6\37\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\24\13\1\u01c7\24\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\5\13\1\u01c8\43\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\1\u01c9\50\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\4\13"+
    "\1\u01ca\44\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\3\13\1\u01cb\45\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\10\13\1\u01cc\40\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\22\13\1\u01cd\26\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\7\13"+
    "\1\u01ce\41\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\22\13\1\u0141\26\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\7\13\1\u01cc\41\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\14\13\1\u01cf\34\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\4\13"+
    "\1\u01d0\44\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\10\13\1\u01d1\40\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\20\13\1\u01d2\30\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\10\13\1\u01d3\40\13"+
    "\20\0\1\13\10\0\2\u01d4\1\117\1\0\5\u01d4\1\0"+
    "\1\u01d4\4\0\2\u01d4\3\0\1\u01d4\1\0\1\117\1\u01d4"+
    "\6\0\1\u01d4\2\0\1\u01d4\5\0\3\u01d4\47\0\1\u01d5"+
    "\1\116\1\117\2\0\3\u01d5\1\117\1\123\1\124\13\0"+
    "\1\117\1\124\6\0\1\117\2\0\1\117\7\0\1\117"+
    "\45\0\13\13\1\0\1\13\4\0\16\13\1\u01d6\32\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\23\13"+
    "\1\u01d7\25\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\5\13\1\316\43\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\16\13\1\u01d8\32\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\10\13\1\u01d9\40\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\3\13"+
    "\1\u016f\45\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\10\13\1\u01da\40\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\15\13\1\u01db\33\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\17\13\1\u018e\31\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\30\13"+
    "\1\u01dc\20\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\17\13\1\u0141\31\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\6\13\1\u01cc\42\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\4\13\1\u01dd\44\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\4\13"+
    "\1\u018e\44\13\20\0\1\13\6\0\13\13\1\0\1\13"+
    "\4\0\1\u0198\50\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\17\13\1\u01de\31\13\20\0\1\13\10\0"+
    "\2\u01df\1\117\1\0\5\u01df\1\0\1\u01df\4\0\2\u01df"+
    "\3\0\1\u01df\1\0\1\117\1\u01df\6\0\1\u01df\2\0"+
    "\1\u01df\5\0\3\u01df\47\0\1\u01e0\1\116\1\117\2\0"+
    "\3\u01e0\1\117\1\123\1\124\13\0\1\117\1\124\6\0"+
    "\1\117\2\0\1\117\7\0\1\117\45\0\13\13\1\0"+
    "\1\13\4\0\11\13\1\u01cc\37\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\23\13\1\u01e1\25\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\20\13\1\u01e2"+
    "\30\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\2\13\1\u01e3\46\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\1\u01e4\50\13\20\0\1\13\6\0\13\13"+
    "\1\0\1\13\4\0\6\13\1\u01e5\42\13\20\0\1\13"+
    "\6\0\13\13\1\0\1\13\4\0\6\13\1\u01e6\42\13"+
    "\20\0\1\13\6\0\13\13\1\0\1\13\4\0\1\u01e7"+
    "\50\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\34\13\1\u01e8\14\13\20\0\1\13\10\0\2\u01e9\1\117"+
    "\1\0\5\u01e9\1\0\1\u01e9\4\0\2\u01e9\3\0\1\u01e9"+
    "\1\0\1\117\1\u01e9\6\0\1\u01e9\2\0\1\u01e9\5\0"+
    "\3\u01e9\47\0\1\u01ea\1\116\1\117\2\0\3\u01ea\1\117"+
    "\1\123\1\124\13\0\1\117\1\124\6\0\1\117\2\0"+
    "\1\117\7\0\1\117\45\0\13\13\1\0\1\13\4\0"+
    "\6\13\1\u01eb\42\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\10\13\1\u01ec\40\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\2\13\1\u018e\46\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\17\13\1\u01ed"+
    "\31\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\11\13\1\u018e\37\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\16\13\1\u01ee\32\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\13\13\1\u01ef\35\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\23\13\1\u01f0"+
    "\25\13\20\0\1\13\10\0\2\u01f1\1\117\1\0\5\u01f1"+
    "\1\0\1\u01f1\4\0\2\u01f1\3\0\1\u01f1\1\0\1\117"+
    "\1\u01f1\6\0\1\u01f1\2\0\1\u01f1\5\0\3\u01f1\47\0"+
    "\1\u01f2\1\116\1\117\2\0\3\u01f2\1\117\1\123\1\124"+
    "\13\0\1\117\1\124\6\0\1\117\2\0\1\117\7\0"+
    "\1\117\45\0\13\13\1\0\1\13\4\0\4\13\1\u01a0"+
    "\44\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\11\13\1\u0198\37\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\36\13\1\u019d\12\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\11\13\1\u01f3\37\13\20\0"+
    "\1\13\6\0\13\13\1\0\1\13\4\0\36\13\1\u01f4"+
    "\12\13\20\0\1\13\6\0\13\13\1\0\1\13\4\0"+
    "\10\13\1\u01f5\40\13\20\0\1\13\10\0\2\u01f6\1\117"+
    "\1\0\5\u01f6\1\0\1\u01f6\4\0\2\u01f6\3\0\1\u01f6"+
    "\1\0\1\117\1\u01f6\6\0\1\u01f6\2\0\1\u01f6\5\0"+
    "\3\u01f6\47\0\1\u01f7\1\116\1\117\2\0\3\u01f7\1\117"+
    "\1\123\1\124\13\0\1\117\1\124\6\0\1\117\2\0"+
    "\1\117\7\0\1\117\45\0\13\13\1\0\1\13\4\0"+
    "\17\13\1\u01e3\31\13\20\0\1\13\6\0\13\13\1\0"+
    "\1\13\4\0\15\13\1\u01f8\33\13\20\0\1\13\6\0"+
    "\13\13\1\0\1\13\4\0\4\13\1\u019f\44\13\20\0"+
    "\1\13\10\0\2\u01f9\1\117\1\0\5\u01f9\1\0\1\u01f9"+
    "\4\0\2\u01f9\3\0\1\u01f9\1\0\1\117\1\u01f9\6\0"+
    "\1\u01f9\2\0\1\u01f9\5\0\3\u01f9\47\0\1\u01fa\1\116"+
    "\1\117\2\0\3\u01fa\1\117\1\123\1\124\13\0\1\117"+
    "\1\124\6\0\1\117\2\0\1\117\7\0\1\117\45\0"+
    "\13\13\1\0\1\13\4\0\27\13\1\u016f\21\13\20\0"+
    "\1\13\10\0\2\u01fb\1\117\1\0\5\u01fb\1\0\1\u01fb"+
    "\4\0\2\u01fb\3\0\1\u01fb\1\0\1\117\1\u01fb\6\0"+
    "\1\u01fb\2\0\1\u01fb\5\0\3\u01fb\47\0\1\u01fc\1\116"+
    "\1\117\2\0\3\u01fc\1\117\1\123\1\124\13\0\1\117"+
    "\1\124\6\0\1\117\2\0\1\117\7\0\1\117\47\0"+
    "\2\u01fd\1\117\1\0\5\u01fd\1\0\1\u01fd\4\0\2\u01fd"+
    "\3\0\1\u01fd\1\0\1\117\1\u01fd\6\0\1\u01fd\2\0"+
    "\1\u01fd\5\0\3\u01fd\47\0\1\u01fe\1\116\1\117\2\0"+
    "\3\u01fe\1\117\1\123\1\124\13\0\1\117\1\124\6\0"+
    "\1\117\2\0\1\117\7\0\1\117\51\0\1\117\23\0"+
    "\1\117\72\0\1\u01ff\1\116\1\117\2\0\3\u01ff\1\117"+
    "\1\123\1\124\13\0\1\117\1\124\6\0\1\117\2\0"+
    "\1\117\7\0\1\117\47\0\1\u0200\1\116\1\117\2\0"+
    "\3\u0200\1\117\1\123\1\124\13\0\1\117\1\124\6\0"+
    "\1\117\2\0\1\117\7\0\1\117\47\0\1\u0201\1\116"+
    "\1\117\2\0\3\u0201\1\117\1\123\1\124\13\0\1\117"+
    "\1\124\6\0\1\117\2\0\1\117\7\0\1\117\47\0"+
    "\1\u0202\1\116\1\117\2\0\3\u0202\1\117\1\123\1\124"+
    "\13\0\1\117\1\124\6\0\1\117\2\0\1\117\7\0"+
    "\1\117\47\0\2\116\1\117\2\0\3\116\1\117\1\123"+
    "\1\124\13\0\1\117\1\124\6\0\1\117\2\0\1\117"+
    "\7\0\1\117\37\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[39447];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\5\0\1\11\14\1\2\11\35\1\7\11\7\1\2\11"+
    "\3\1\1\11\1\1\2\11\3\1\1\0\2\1\1\11"+
    "\1\0\3\1\1\0\100\1\1\11\2\1\2\11\1\1"+
    "\1\11\1\0\5\1\1\0\104\1\2\0\353\1\1\0"+
    "\12\1\1\0\11\1\1\0\7\1\1\0\4\1\1\0"+
    "\2\1\1\0\1\1\1\0\1\1\1\0\5\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[514];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
    /**
     * Create an empty lexer, yyrset will be called later to reset and assign
     * the reader
     */
    public JavaLexer() {
        super();
    }

    @Override
    public int yychar() {
        return yychar;
    }

    private static final byte PARAN     = 1;
    private static final byte BRACKET   = 2;
    private static final byte CURLY     = 3;



  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public JavaLexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  public JavaLexer(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 2284) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Token yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 8: 
          { return token(TokenType.OPERATOR, -PARAN);
          }
        case 28: break;
        case 20: 
          { return token(TokenType.KEYWORD);
          }
        case 29: break;
        case 4: 
          { return token(TokenType.NUMBER);
          }
        case 30: break;
        case 18: 
          { yybegin(JDOC); 
                                     // length also includes the trailing quote
                                     int start = tokenStart;
                                     tokenStart = yychar;
                                     int len = tokenLength;
                                     tokenLength = 1;
                                     return token(TokenType.COMMENT2, start, len);
          }
        case 31: break;
        case 22: 
          { yybegin(YYINITIAL); 
                                     return token(TokenType.COMMENT, tokenStart, tokenLength + 2);
          }
        case 32: break;
        case 2: 
          { return token(TokenType.OPERATOR);
          }
        case 33: break;
        case 9: 
          { return token(TokenType.OPERATOR,  CURLY);
          }
        case 34: break;
        case 10: 
          { return token(TokenType.OPERATOR, -CURLY);
          }
        case 35: break;
        case 17: 
          { yybegin(JDOC_TAG); 
                                     int start = tokenStart;
                                     tokenStart = yychar;
                                     int len = tokenLength;
                                     tokenLength = 1;
                                     return token(TokenType.COMMENT, start, len);
          }
        case 36: break;
        case 13: 
          { tokenLength += yylength();
          }
        case 37: break;
        case 14: 
          { yybegin(YYINITIAL);
          }
        case 38: break;
        case 6: 
          { yybegin(CHARLITERAL); 
                                    tokenStart = yychar; 
                                    tokenLength = 1;
          }
        case 39: break;
        case 23: 
          { yybegin(JDOC); 
                                    tokenStart = yychar; 
                                    tokenLength = 3;
          }
        case 40: break;
        case 15: 
          { yybegin(YYINITIAL); 
                                     // length also includes the trailing quote
                                     return token(TokenType.STRING, tokenStart, tokenLength + 1);
          }
        case 41: break;
        case 24: 
          { return token(TokenType.TYPE);
          }
        case 42: break;
        case 26: 
          { return token(TokenType.WARNING);
          }
        case 43: break;
        case 12: 
          { return token(TokenType.OPERATOR, -BRACKET);
          }
        case 44: break;
        case 7: 
          { return token(TokenType.OPERATOR,  PARAN);
          }
        case 45: break;
        case 3: 
          { return token(TokenType.IDENTIFIER);
          }
        case 46: break;
        case 21: 
          { tokenLength += 2;
          }
        case 47: break;
        case 27: 
          { return token(TokenType.TYPE2);
          }
        case 48: break;
        case 25: 
          { return token(TokenType.ERROR);
          }
        case 49: break;
        case 16: 
          { tokenLength ++;
          }
        case 50: break;
        case 11: 
          { return token(TokenType.OPERATOR,  BRACKET);
          }
        case 51: break;
        case 19: 
          { return token(TokenType.COMMENT);
          }
        case 52: break;
        case 5: 
          { yybegin(STRING); 
                                    tokenStart = yychar; 
                                    tokenLength = 1;
          }
        case 53: break;
        case 1: 
          { 
          }
        case 54: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
              {
                return null;
              }
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
