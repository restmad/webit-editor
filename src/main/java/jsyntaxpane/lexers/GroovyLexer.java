/* The following code was generated by JFlex 1.4.3 on 14-3-27 ÏÂÎç10:25 */

/*
 * Copyright 2008 Ayman Al-Sairafi ayman.alsairafi@gmail.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License
 *       at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package jsyntaxpane.lexers;


import jsyntaxpane.Token;
import jsyntaxpane.TokenType;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 14-3-27 ÏÂÎç10:25 from the specification file
 * <tt>F:/Workspace/r095/jsyntaxpane/src/main/jflex/jsyntaxpane/lexers/groovy.flex</tt>
 */
public final class GroovyLexer extends DefaultJFlexLexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int JDOC = 10;
  public static final int REGEX = 6;
  public static final int STRING = 2;
  public static final int GSTRING_EXPR = 8;
  public static final int CHARLITERAL = 4;
  public static final int ML_STRING = 14;
  public static final int YYINITIAL = 0;
  public static final int JDOC_TAG = 12;
  public static final int ML_STRING_EXPR = 16;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2,  2,  3,  3,  4,  4,  5,  5,  6,  6,  7,  7, 
     8, 8
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\7\1\3\1\2\1\0\1\3\1\1\16\7\4\0\1\3\1\112"+
    "\1\24\1\0\1\25\1\112\1\115\1\26\1\77\1\100\1\5\1\117"+
    "\1\105\1\23\1\21\1\4\1\10\1\16\2\15\4\17\2\11\1\114"+
    "\1\105\1\111\1\107\1\110\1\113\1\106\1\14\1\60\1\61\1\62"+
    "\1\22\1\20\2\120\1\63\2\120\1\12\1\75\1\70\1\64\1\71"+
    "\1\120\1\74\1\66\1\73\1\76\1\67\1\120\1\13\2\120\1\103"+
    "\1\27\1\104\1\112\1\6\1\0\1\30\1\31\1\35\1\47\1\40"+
    "\1\52\1\54\1\44\1\45\1\65\1\42\1\37\1\50\1\41\1\36"+
    "\1\53\1\72\1\34\1\32\1\33\1\46\1\55\1\56\1\51\1\43"+
    "\1\57\1\101\1\116\1\102\1\112\41\7\2\0\4\6\4\0\1\120"+
    "\2\0\1\7\7\0\1\120\4\0\1\120\5\0\27\120\1\0\37\120"+
    "\1\0\u01ca\120\4\0\14\120\16\0\5\120\7\0\1\120\1\0\1\120"+
    "\21\0\160\7\5\120\1\0\2\120\2\0\4\120\10\0\1\120\1\0"+
    "\3\120\1\0\1\120\1\0\24\120\1\0\123\120\1\0\213\120\1\0"+
    "\5\7\2\0\236\120\11\0\46\120\2\0\1\120\7\0\47\120\11\0"+
    "\55\7\1\0\1\7\1\0\2\7\1\0\2\7\1\0\1\7\10\0"+
    "\33\120\5\0\3\120\15\0\4\7\7\0\1\6\4\0\13\7\5\0"+
    "\53\120\37\7\4\0\2\120\1\7\143\120\1\0\1\120\10\7\1\0"+
    "\6\7\2\120\2\7\1\0\4\7\2\120\12\7\3\120\2\0\1\120"+
    "\17\0\1\7\1\120\1\7\36\120\33\7\2\0\131\120\13\7\1\120"+
    "\16\0\12\7\41\120\11\7\2\120\4\0\1\120\5\0\26\120\4\7"+
    "\1\120\11\7\1\120\3\7\1\120\5\7\22\0\31\120\3\7\244\0"+
    "\4\7\66\120\3\7\1\120\22\7\1\120\7\7\12\120\2\7\2\0"+
    "\12\7\1\0\7\120\1\0\7\120\1\0\3\7\1\0\10\120\2\0"+
    "\2\120\2\0\26\120\1\0\7\120\1\0\1\120\3\0\4\120\2\0"+
    "\1\7\1\120\7\7\2\0\2\7\2\0\3\7\1\120\10\0\1\7"+
    "\4\0\2\120\1\0\3\120\2\7\2\0\12\7\2\120\2\6\7\0"+
    "\1\6\5\0\3\7\1\0\6\120\4\0\2\120\2\0\26\120\1\0"+
    "\7\120\1\0\2\120\1\0\2\120\1\0\2\120\2\0\1\7\1\0"+
    "\5\7\4\0\2\7\2\0\3\7\3\0\1\7\7\0\4\120\1\0"+
    "\1\120\7\0\14\7\3\120\1\7\13\0\3\7\1\0\11\120\1\0"+
    "\3\120\1\0\26\120\1\0\7\120\1\0\2\120\1\0\5\120\2\0"+
    "\1\7\1\120\10\7\1\0\3\7\1\0\3\7\2\0\1\120\17\0"+
    "\2\120\2\7\2\0\12\7\1\0\1\6\17\0\3\7\1\0\10\120"+
    "\2\0\2\120\2\0\26\120\1\0\7\120\1\0\2\120\1\0\5\120"+
    "\2\0\1\7\1\120\7\7\2\0\2\7\2\0\3\7\10\0\2\7"+
    "\4\0\2\120\1\0\3\120\2\7\2\0\12\7\1\0\1\120\20\0"+
    "\1\7\1\120\1\0\6\120\3\0\3\120\1\0\4\120\3\0\2\120"+
    "\1\0\1\120\1\0\2\120\3\0\2\120\3\0\3\120\3\0\14\120"+
    "\4\0\5\7\3\0\3\7\1\0\4\7\2\0\1\120\6\0\1\7"+
    "\16\0\12\7\11\0\1\6\7\0\3\7\1\0\10\120\1\0\3\120"+
    "\1\0\27\120\1\0\12\120\1\0\5\120\3\0\1\120\7\7\1\0"+
    "\3\7\1\0\4\7\7\0\2\7\1\0\2\120\6\0\2\120\2\7"+
    "\2\0\12\7\22\0\2\7\1\0\10\120\1\0\3\120\1\0\27\120"+
    "\1\0\12\120\1\0\5\120\2\0\1\7\1\120\7\7\1\0\3\7"+
    "\1\0\4\7\7\0\2\7\7\0\1\120\1\0\2\120\2\7\2\0"+
    "\12\7\1\0\2\120\17\0\2\7\1\0\10\120\1\0\3\120\1\0"+
    "\51\120\2\0\1\120\7\7\1\0\3\7\1\0\4\7\1\120\10\0"+
    "\1\7\10\0\2\120\2\7\2\0\12\7\12\0\6\120\2\0\2\7"+
    "\1\0\22\120\3\0\30\120\1\0\11\120\1\0\1\120\2\0\7\120"+
    "\3\0\1\7\4\0\6\7\1\0\1\7\1\0\10\7\22\0\2\7"+
    "\15\0\60\120\1\7\2\120\7\7\4\0\1\6\7\120\10\7\1\0"+
    "\12\7\47\0\2\120\1\0\1\120\2\0\2\120\1\0\1\120\2\0"+
    "\1\120\6\0\4\120\1\0\7\120\1\0\3\120\1\0\1\120\1\0"+
    "\1\120\2\0\2\120\1\0\4\120\1\7\2\120\6\7\1\0\2\7"+
    "\1\120\2\0\5\120\1\0\1\120\1\0\6\7\2\0\12\7\2\0"+
    "\2\120\42\0\1\120\27\0\2\7\6\0\12\7\13\0\1\7\1\0"+
    "\1\7\1\0\1\7\4\0\2\7\10\120\1\0\44\120\4\0\24\7"+
    "\1\0\2\7\5\120\13\7\1\0\44\7\11\0\1\7\71\0\53\120"+
    "\24\7\1\120\12\7\6\0\6\120\4\7\4\120\3\7\1\120\3\7"+
    "\2\120\7\7\3\120\4\7\15\120\14\7\1\120\17\7\2\0\46\120"+
    "\12\0\53\120\1\0\1\120\3\0\u0149\120\1\0\4\120\2\0\7\120"+
    "\1\0\1\120\1\0\4\120\2\0\51\120\1\0\4\120\2\0\41\120"+
    "\1\0\4\120\2\0\7\120\1\0\1\120\1\0\4\120\2\0\17\120"+
    "\1\0\71\120\1\0\4\120\2\0\103\120\2\0\3\7\40\0\20\120"+
    "\20\0\125\120\14\0\u026c\120\2\0\21\120\1\0\32\120\5\0\113\120"+
    "\3\0\3\6\17\0\15\120\1\0\4\120\3\7\13\0\22\120\3\7"+
    "\13\0\22\120\2\7\14\0\15\120\1\0\3\120\1\0\2\7\14\0"+
    "\64\120\40\7\3\0\1\120\3\0\1\6\1\120\1\7\2\0\12\7"+
    "\41\0\3\7\2\0\12\7\6\0\130\120\10\0\51\120\1\7\1\120"+
    "\5\0\106\120\12\0\35\120\3\0\14\7\4\0\14\7\12\0\12\7"+
    "\36\120\2\0\5\120\13\0\54\120\4\0\21\7\7\120\2\7\6\0"+
    "\12\7\46\0\27\120\5\7\4\0\65\120\12\7\1\0\35\7\2\0"+
    "\13\7\6\0\12\7\15\0\1\120\130\0\5\7\57\120\21\7\7\120"+
    "\4\0\12\7\21\0\11\7\14\0\3\7\36\120\12\7\3\0\2\120"+
    "\12\7\6\0\46\120\16\7\14\0\44\120\24\7\10\0\12\7\3\0"+
    "\3\120\12\7\44\120\122\0\3\7\1\0\25\7\4\120\1\7\4\120"+
    "\1\7\15\0\300\120\47\7\25\0\4\7\u0116\120\2\0\6\120\2\0"+
    "\46\120\2\0\6\120\2\0\10\120\1\0\1\120\1\0\1\120\1\0"+
    "\1\120\1\0\37\120\2\0\65\120\1\0\7\120\1\0\1\120\3\0"+
    "\3\120\1\0\7\120\3\0\4\120\2\0\6\120\4\0\15\120\5\0"+
    "\3\120\1\0\7\120\16\0\5\7\32\0\5\7\20\0\2\6\23\0"+
    "\1\6\13\0\5\7\5\0\6\7\1\0\1\120\15\0\1\120\20\0"+
    "\15\120\3\0\32\6\26\0\15\7\4\0\1\7\3\0\14\7\21\0"+
    "\1\120\4\0\1\120\2\0\12\120\1\0\1\120\3\0\5\120\6\0"+
    "\1\120\1\0\1\120\1\0\1\120\1\0\4\120\1\0\13\120\2\0"+
    "\4\120\5\0\5\120\4\0\1\120\21\0\43\6\2\120\4\6\u0a77\0"+
    "\57\120\1\0\57\120\1\0\205\120\6\0\4\120\3\7\16\0\46\120"+
    "\12\0\66\120\11\0\1\120\17\0\1\7\27\120\11\0\7\120\1\0"+
    "\7\120\1\0\7\120\1\0\7\120\1\0\7\120\1\0\7\120\1\0"+
    "\7\120\1\0\7\120\1\0\40\7\57\0\1\120\u01d5\0\2\120\1\6"+
    "\31\0\11\6\6\7\1\0\5\120\2\0\3\6\2\120\4\0\126\120"+
    "\2\0\2\7\2\0\3\120\1\0\132\120\1\0\4\120\5\0\51\120"+
    "\3\0\136\120\21\0\33\120\65\0\20\120\u0200\0\u19b6\120\112\0\u51cc\120"+
    "\64\0\u048d\120\103\0\56\120\2\0\u010d\120\3\0\20\120\12\7\2\120"+
    "\24\0\57\120\1\7\14\0\2\7\1\0\31\120\10\0\106\120\12\6"+
    "\2\7\45\0\11\120\2\0\147\120\2\0\4\120\1\0\2\120\16\0"+
    "\12\120\120\0\10\120\1\7\3\120\1\7\4\120\1\7\27\120\5\7"+
    "\20\0\1\6\7\0\64\120\14\0\2\7\62\120\21\7\13\0\12\7"+
    "\6\0\22\7\6\120\3\0\1\120\4\0\12\7\34\120\10\7\2\0"+
    "\27\120\15\7\14\0\35\120\3\0\4\7\57\120\16\7\16\0\1\120"+
    "\12\7\46\0\51\120\16\7\11\0\3\120\1\7\10\120\2\7\2\0"+
    "\12\7\6\0\27\120\3\0\1\120\1\7\4\0\60\120\1\7\1\120"+
    "\3\7\2\120\2\7\5\120\2\7\1\120\1\7\1\120\30\0\3\120"+
    "\43\0\6\120\2\0\6\120\2\0\6\120\11\0\7\120\1\0\7\120"+
    "\221\0\43\120\10\7\1\0\2\7\2\0\12\7\6\0\u2ba4\120\14\0"+
    "\27\120\4\0\61\120\u2104\0\u012e\120\2\0\76\120\2\0\152\120\46\0"+
    "\7\120\14\0\5\120\5\0\1\120\1\7\12\120\1\0\15\120\1\0"+
    "\5\120\1\0\1\120\1\0\2\120\1\0\2\120\1\0\154\120\41\0"+
    "\u016b\120\22\0\100\120\2\0\66\120\50\0\14\120\1\6\3\0\20\7"+
    "\20\0\7\7\14\0\2\6\30\0\3\6\31\0\1\6\6\0\5\120"+
    "\1\0\207\120\2\0\1\7\4\0\1\6\13\0\12\7\7\0\32\120"+
    "\4\0\1\6\1\0\32\120\13\0\131\120\3\0\6\120\2\0\6\120"+
    "\2\0\6\120\2\0\3\120\3\0\2\6\3\0\2\6\22\0\3\7"+
    "\4\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\11\0\1\1\1\2\2\3\1\4\2\5\2\4\1\3"+
    "\1\4\1\3\1\6\1\7\34\4\1\10\1\11\1\12"+
    "\1\13\1\14\1\15\7\3\1\16\2\17\1\20\2\1"+
    "\1\16\1\21\1\1\1\16\1\22\1\16\1\23\1\24"+
    "\1\23\1\25\2\26\6\16\1\27\1\0\1\30\1\0"+
    "\1\3\3\5\1\0\3\5\1\0\3\4\1\0\1\4"+
    "\1\31\26\4\1\31\1\4\2\31\40\4\1\3\1\32"+
    "\1\33\2\16\1\34\1\0\1\35\1\0\2\30\1\0"+
    "\1\36\4\5\1\0\4\4\1\37\30\4\1\31\2\4"+
    "\1\31\44\4\1\40\1\41\2\0\2\5\37\4\1\42"+
    "\30\4\2\5\11\4\1\31\10\4\1\31\2\4\1\31"+
    "\2\4\1\42\22\4\2\5\31\4\1\42\5\4\1\42"+
    "\2\4\2\5\35\4\2\5\27\4\2\5\1\4\1\43"+
    "\24\4\2\5\20\4\1\0\1\5\11\4\1\0\1\5"+
    "\10\4\1\0\1\5\6\4\1\0\1\5\3\4\1\0"+
    "\1\5\1\4\1\0\1\5\1\0\1\5\1\0\5\5";

  private static int [] zzUnpackAction() {
    int [] result = new int[540];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\121\0\242\0\363\0\u0144\0\u0195\0\u01e6\0\u0237"+
    "\0\u0288\0\u02d9\0\u032a\0\u037b\0\u03cc\0\u041d\0\u046e\0\u04bf"+
    "\0\u0510\0\u0561\0\u05b2\0\u0603\0\u0654\0\u06a5\0\u02d9\0\u06f6"+
    "\0\u0747\0\u0798\0\u07e9\0\u083a\0\u088b\0\u08dc\0\u092d\0\u097e"+
    "\0\u09cf\0\u0a20\0\u0a71\0\u0ac2\0\u0b13\0\u0b64\0\u0bb5\0\u0c06"+
    "\0\u0c57\0\u0ca8\0\u0cf9\0\u0d4a\0\u0d9b\0\u0dec\0\u0e3d\0\u0e8e"+
    "\0\u0edf\0\u0f30\0\u0f81\0\u02d9\0\u02d9\0\u02d9\0\u02d9\0\u02d9"+
    "\0\u02d9\0\u02d9\0\u0fd2\0\u1023\0\u1074\0\u10c5\0\u1116\0\u1167"+
    "\0\u11b8\0\u1209\0\u02d9\0\u02d9\0\u125a\0\u12ab\0\u12fc\0\u02d9"+
    "\0\u134d\0\u139e\0\u02d9\0\u13ef\0\u02d9\0\u02d9\0\u1440\0\u02d9"+
    "\0\u02d9\0\u1440\0\u1491\0\u02d9\0\u14e2\0\u1533\0\u1584\0\u12ab"+
    "\0\u02d9\0\u15d5\0\u1626\0\u1677\0\u15d5\0\u16c8\0\u1719\0\u02d9"+
    "\0\u176a\0\u17bb\0\u180c\0\u185d\0\u18ae\0\u18ff\0\u1950\0\u19a1"+
    "\0\u19f2\0\u1a43\0\u1a94\0\u1ae5\0\u1b36\0\u1b87\0\u1bd8\0\u1c29"+
    "\0\u1c7a\0\u1ccb\0\u1d1c\0\u1d6d\0\u1dbe\0\u1e0f\0\u1e60\0\u1eb1"+
    "\0\u1f02\0\u1f53\0\u1fa4\0\u1ff5\0\u2046\0\u2097\0\u20e8\0\u2139"+
    "\0\u218a\0\u21db\0\u222c\0\u041d\0\u227d\0\u22ce\0\u231f\0\u2370"+
    "\0\u23c1\0\u2412\0\u2463\0\u24b4\0\u2505\0\u2556\0\u25a7\0\u25f8"+
    "\0\u2649\0\u269a\0\u26eb\0\u273c\0\u278d\0\u27de\0\u282f\0\u2880"+
    "\0\u28d1\0\u2922\0\u2973\0\u29c4\0\u2a15\0\u2a66\0\u2ab7\0\u2b08"+
    "\0\u2b59\0\u2baa\0\u2bfb\0\u2c4c\0\u2c9d\0\u2cee\0\u02d9\0\u02d9"+
    "\0\u2d3f\0\u2d90\0\u02d9\0\u2de1\0\u02d9\0\u2e32\0\u2e83\0\u02d9"+
    "\0\u2ed4\0\u2f25\0\u2f76\0\u2fc7\0\u3018\0\u3069\0\u30ba\0\u310b"+
    "\0\u315c\0\u31ad\0\u31fe\0\u02d9\0\u324f\0\u32a0\0\u32f1\0\u3342"+
    "\0\u3393\0\u33e4\0\u3435\0\u3486\0\u34d7\0\u3528\0\u3579\0\u35ca"+
    "\0\u361b\0\u366c\0\u36bd\0\u370e\0\u375f\0\u37b0\0\u3801\0\u3852"+
    "\0\u38a3\0\u38f4\0\u3945\0\u3996\0\u39e7\0\u3a38\0\u3a89\0\u3ada"+
    "\0\u3b2b\0\u3b7c\0\u3bcd\0\u3c1e\0\u3c6f\0\u3cc0\0\u3d11\0\u3d62"+
    "\0\u3db3\0\u3e04\0\u3e55\0\u3ea6\0\u3ef7\0\u3f48\0\u3f99\0\u3fea"+
    "\0\u403b\0\u408c\0\u40dd\0\u412e\0\u417f\0\u41d0\0\u4221\0\u4272"+
    "\0\u42c3\0\u4314\0\u4365\0\u43b6\0\u4407\0\u4458\0\u44a9\0\u44fa"+
    "\0\u454b\0\u459c\0\u45ed\0\u463e\0\u02d9\0\u02d9\0\u468f\0\u2f25"+
    "\0\u46e0\0\u4731\0\u4782\0\u47d3\0\u4824\0\u4875\0\u48c6\0\u4917"+
    "\0\u4968\0\u49b9\0\u4a0a\0\u4a5b\0\u4aac\0\u4afd\0\u4b4e\0\u4b9f"+
    "\0\u4bf0\0\u4c41\0\u4c92\0\u4ce3\0\u4d34\0\u4d85\0\u4dd6\0\u4e27"+
    "\0\u4e78\0\u4ec9\0\u4f1a\0\u4f6b\0\u4fbc\0\u500d\0\u505e\0\u50af"+
    "\0\u5100\0\u041d\0\u5151\0\u51a2\0\u51f3\0\u5244\0\u5295\0\u52e6"+
    "\0\u5337\0\u5388\0\u53d9\0\u542a\0\u547b\0\u54cc\0\u551d\0\u556e"+
    "\0\u55bf\0\u5610\0\u5661\0\u56b2\0\u5703\0\u5754\0\u57a5\0\u57f6"+
    "\0\u5847\0\u5898\0\u58e9\0\u593a\0\u598b\0\u59dc\0\u5a2d\0\u5a7e"+
    "\0\u5acf\0\u5b20\0\u5b71\0\u5bc2\0\u5c13\0\u366c\0\u5c64\0\u5cb5"+
    "\0\u5d06\0\u5d57\0\u5da8\0\u5df9\0\u5e4a\0\u5e9b\0\u5eec\0\u5f3d"+
    "\0\u5f8e\0\u5fdf\0\u6030\0\u6081\0\u60d2\0\u6123\0\u6174\0\u61c5"+
    "\0\u6216\0\u6267\0\u62b8\0\u6309\0\u635a\0\u63ab\0\u63fc\0\u644d"+
    "\0\u649e\0\u64ef\0\u6540\0\u6591\0\u65e2\0\u6633\0\u6684\0\u66d5"+
    "\0\u6726\0\u6777\0\u67c8\0\u6819\0\u686a\0\u68bb\0\u690c\0\u695d"+
    "\0\u69ae\0\u69ff\0\u6a50\0\u6aa1\0\u6af2\0\u6b43\0\u6b94\0\u6be5"+
    "\0\u6c36\0\u6c87\0\u6cd8\0\u6d29\0\u6d7a\0\u6dcb\0\u6e1c\0\u6e6d"+
    "\0\u6ebe\0\u6f0f\0\u6f60\0\u6fb1\0\u7002\0\u7053\0\u70a4\0\u70f5"+
    "\0\u7146\0\u7197\0\u71e8\0\u7239\0\u728a\0\u72db\0\u732c\0\u737d"+
    "\0\u73ce\0\u741f\0\u7470\0\u74c1\0\u7512\0\u7563\0\u75b4\0\u7605"+
    "\0\u7656\0\u76a7\0\u76f8\0\u7749\0\u779a\0\u77eb\0\u783c\0\u788d"+
    "\0\u78de\0\u792f\0\u7980\0\u79d1\0\u7a22\0\u7a73\0\u7ac4\0\u7b15"+
    "\0\u7b66\0\u7bb7\0\u7c08\0\u7c59\0\u7caa\0\u7cfb\0\u7d4c\0\u7d9d"+
    "\0\u7dee\0\u7e3f\0\u7e90\0\u7ee1\0\u7f32\0\u7f83\0\u7fd4\0\u8025"+
    "\0\u8076\0\u80c7\0\u8118\0\u8169\0\u81ba\0\u820b\0\u825c\0\u82ad"+
    "\0\u82fe\0\u834f\0\u83a0\0\u83f1\0\u8442\0\u8493\0\u041d\0\u84e4"+
    "\0\u8535\0\u8586\0\u85d7\0\u8628\0\u8679\0\u86ca\0\u871b\0\u876c"+
    "\0\u87bd\0\u880e\0\u885f\0\u88b0\0\u8901\0\u8952\0\u89a3\0\u89f4"+
    "\0\u8a45\0\u8a96\0\u8ae7\0\u8b38\0\u8b89\0\u8bda\0\u8c2b\0\u8c7c"+
    "\0\u8ccd\0\u8d1e\0\u8d6f\0\u8dc0\0\u8e11\0\u8e62\0\u8eb3\0\u8f04"+
    "\0\u8f55\0\u8fa6\0\u8ff7\0\u9048\0\u9099\0\u90ea\0\u913b\0\u918c"+
    "\0\u91dd\0\u922e\0\u927f\0\u92d0\0\u9321\0\u9372\0\u93c3\0\u9414"+
    "\0\u9465\0\u94b6\0\u9507\0\u9558\0\u95a9\0\u95fa\0\u964b\0\u969c"+
    "\0\u96ed\0\u973e\0\u978f\0\u97e0\0\u9831\0\u9882\0\u98d3\0\u9924"+
    "\0\u9975\0\u99c6\0\u9a17\0\u9a68\0\u9ab9\0\u9b0a\0\u9b5b\0\u9bac"+
    "\0\u9bfd\0\u9c4e\0\u9c9f\0\u9cf0\0\u9d41\0\u9d92\0\u9de3\0\u9e34"+
    "\0\u9e85\0\u9ed6\0\u9f27\0\u9f78";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[540];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\12\3\13\1\14\1\15\1\16\1\12\1\17\1\20"+
    "\2\16\1\21\3\20\1\22\1\23\1\24\1\25\1\26"+
    "\1\16\1\27\1\12\1\30\1\31\1\32\1\33\1\34"+
    "\1\35\1\16\1\36\1\37\1\40\3\16\1\41\1\16"+
    "\1\42\2\16\1\43\1\44\1\45\1\46\1\47\1\16"+
    "\1\50\1\51\1\52\1\53\1\54\1\16\1\55\1\56"+
    "\1\57\1\60\1\16\1\61\1\62\1\16\1\63\1\64"+
    "\1\65\1\66\1\67\1\70\1\71\2\72\1\15\1\73"+
    "\1\74\1\15\1\75\1\72\1\76\1\77\1\100\1\16"+
    "\1\101\1\102\1\103\21\101\1\104\1\105\1\101\1\106"+
    "\71\101\1\107\1\102\1\103\23\107\1\110\1\111\71\107"+
    "\1\112\1\102\1\103\1\112\1\113\22\112\1\114\71\112"+
    "\1\115\2\12\21\115\2\12\1\115\1\12\52\115\1\116"+
    "\23\115\1\117\100\115\1\120\12\115\5\121\1\122\4\121"+
    "\3\123\3\121\1\123\1\121\1\123\5\121\47\123\21\121"+
    "\1\123\1\124\1\125\22\124\1\126\1\127\1\124\1\130"+
    "\71\124\102\115\1\131\16\115\122\0\3\13\115\0\4\132"+
    "\1\133\1\134\101\132\1\135\11\132\107\0\1\72\17\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\47\16\21\0"+
    "\1\16\10\0\1\136\1\137\1\140\1\141\1\0\1\142"+
    "\1\143\1\142\1\140\1\144\1\145\14\0\1\140\1\145"+
    "\6\0\1\140\1\0\1\141\1\140\7\0\1\140\46\0"+
    "\2\20\1\140\2\0\3\20\1\140\1\144\1\145\14\0"+
    "\1\140\1\145\6\0\1\140\2\0\1\140\7\0\1\140"+
    "\44\0\13\16\1\0\1\16\2\0\1\16\2\0\4\16"+
    "\1\146\42\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\7\16\1\147\37\16\21\0\1\16"+
    "\10\0\2\144\3\0\3\144\107\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\21\16\1\150\25\16\21\0\1\16"+
    "\23\0\1\72\63\0\1\72\35\0\1\151\102\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\1\16\1\152\1\153"+
    "\44\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\4\16\1\154\1\16\1\155\4\16\1\156"+
    "\33\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\3\16\1\157\7\16\1\160\1\161\1\16"+
    "\1\162\7\16\1\163\20\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\4\16\1\164\7\16"+
    "\1\165\32\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\10\16\1\166\36\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\1\167"+
    "\5\16\1\170\1\171\4\16\1\172\32\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\6\16"+
    "\1\173\40\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\7\16\1\174\1\16\1\175\7\16"+
    "\1\176\25\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\1\177\7\16\1\200\5\16\1\201"+
    "\30\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\11\16\1\202\6\16\1\203\1\16\1\204"+
    "\24\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\6\16\1\205\1\16\1\206\36\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\1\207\5\16\1\210\1\211\5\16\1\212\31\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\1\213\3\16\1\214\11\16\1\215\30\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\6\16"+
    "\1\216\40\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\6\16\1\217\40\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\14\16"+
    "\1\220\32\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\6\16\1\221\4\16\1\222\33\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\6\16\1\223\1\224\4\16\1\225\32\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\6\16\1\226\40\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\7\16\1\227\1\16\1\230"+
    "\35\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\1\16\1\231\45\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\3\16\1\232"+
    "\4\16\1\233\3\16\1\234\32\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\6\16\1\235"+
    "\40\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\6\16\1\236\1\16\1\237\5\16\1\240"+
    "\30\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\1\241\46\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\14\16\1\242\32\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\10\16\1\243\5\16\1\244\30\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\11\16"+
    "\1\245\35\16\21\0\1\16\107\0\1\72\1\246\117\0"+
    "\1\72\1\0\1\15\30\0\1\72\206\0\1\72\5\0"+
    "\1\72\112\0\1\72\6\0\1\72\111\0\1\72\7\0"+
    "\1\72\1\0\1\101\2\0\21\101\2\0\1\101\1\0"+
    "\71\101\2\0\1\103\217\0\1\247\17\0\2\250\1\0"+
    "\5\250\1\251\4\250\2\251\1\252\101\250\1\107\2\0"+
    "\23\107\2\0\71\107\2\250\1\0\116\250\1\112\2\0"+
    "\1\112\1\0\115\112\1\250\1\0\1\112\1\250\114\112"+
    "\4\0\1\253\126\0\3\123\3\0\1\123\1\0\1\123"+
    "\5\0\47\123\15\0\1\124\3\0\1\123\2\0\1\124"+
    "\142\0\1\254\175\0\1\255\17\0\1\256\2\0\1\256"+
    "\1\0\114\256\1\133\1\257\1\260\116\133\5\261\1\262"+
    "\113\261\10\0\1\136\1\137\1\140\2\0\1\142\1\143"+
    "\1\142\1\140\1\144\1\145\14\0\1\140\1\145\6\0"+
    "\1\140\2\0\1\140\7\0\1\140\46\0\2\137\3\0"+
    "\3\137\1\140\1\144\1\145\15\0\1\145\6\0\1\140"+
    "\2\0\1\140\7\0\1\140\46\0\1\263\1\264\2\0"+
    "\5\264\1\0\1\264\5\0\2\264\3\0\1\264\2\0"+
    "\1\264\6\0\1\264\2\0\1\264\5\0\3\264\46\0"+
    "\1\265\1\137\1\140\2\0\3\265\1\140\1\144\1\145"+
    "\14\0\1\140\1\145\6\0\1\140\2\0\1\140\7\0"+
    "\1\140\46\0\1\142\1\137\1\140\2\0\3\142\1\140"+
    "\1\144\1\145\14\0\1\140\1\145\6\0\1\140\2\0"+
    "\1\140\7\0\1\140\46\0\2\144\3\0\3\144\1\140"+
    "\1\0\1\145\15\0\1\145\6\0\1\140\2\0\1\140"+
    "\7\0\1\140\46\0\2\266\3\0\3\266\3\0\1\267"+
    "\73\0\1\267\7\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\4\16\1\270\10\16\1\271\31\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\6\16"+
    "\1\272\40\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\5\16\1\273\41\16\21\0\1\16"+
    "\24\0\1\274\102\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\2\16\1\275\44\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\2\16\1\276\44\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\10\16\1\277\36\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\6\16\1\300\40\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\3\16\1\301\43\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\1\302\3\16\1\303"+
    "\42\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\11\16\1\304\35\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\6\16\1\305"+
    "\40\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\23\16\1\306\23\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\15\16\1\307"+
    "\31\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\1\310\12\16\1\204\2\16\1\301\30\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\4\16\1\311\10\16\1\312\31\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\3\16"+
    "\1\313\43\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\2\16\1\301\1\314\43\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\11\16\1\315\35\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\1\316\46\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\1\210"+
    "\46\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\11\16\1\317\35\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\2\16\1\301"+
    "\44\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\16\16\1\320\30\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\3\16\1\321"+
    "\43\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\3\16\1\322\43\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\26\16\1\204"+
    "\20\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\7\16\1\323\37\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\2\16\1\324"+
    "\1\325\43\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\23\16\1\326\23\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\16\16"+
    "\1\327\30\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\22\16\1\330\24\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\7\16"+
    "\1\174\37\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\4\16\1\204\42\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\6\16"+
    "\1\331\40\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\11\16\1\332\35\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\5\16"+
    "\1\333\41\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\6\16\1\334\6\16\1\335\31\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\1\16\1\336\45\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\3\16\1\337\43\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\7\16\1\340\5\16\1\341\31\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\15\16"+
    "\1\342\31\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\6\16\1\343\40\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\3\16"+
    "\1\344\43\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\20\16\1\345\26\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\1\346"+
    "\5\16\1\347\40\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\1\350\46\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\16\16"+
    "\1\351\30\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\7\16\1\352\37\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\2\16"+
    "\1\353\1\354\13\16\1\355\27\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\35\16\1\356"+
    "\11\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\4\16\1\357\42\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\4\16\1\360"+
    "\1\361\41\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\6\16\1\362\40\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\15\16"+
    "\1\363\31\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\36\16\1\364\10\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\24\16"+
    "\1\365\22\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\7\16\1\366\10\16\1\367\26\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\5\16\1\370\41\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\4\16\1\371\42\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\24\16\1\372\22\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\11\16\1\373\35\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\2\16\1\374\44\16\21\0\1\16\107\0\1\72"+
    "\1\15\20\0\1\252\4\0\3\252\111\0\1\124\4\0"+
    "\3\124\125\0\1\375\74\0\1\256\2\0\1\256\1\376"+
    "\114\256\2\0\1\260\116\0\5\261\1\377\113\261\4\0"+
    "\1\260\1\u0100\123\0\1\263\1\264\1\140\1\0\5\264"+
    "\1\0\1\264\5\0\2\264\3\0\1\264\1\0\1\140"+
    "\1\264\6\0\1\264\2\0\1\264\5\0\3\264\46\0"+
    "\2\u0101\1\140\1\0\5\u0101\1\0\1\u0101\5\0\2\u0101"+
    "\3\0\1\u0101\1\0\1\140\1\u0101\6\0\1\u0101\2\0"+
    "\1\u0101\5\0\3\u0101\46\0\1\u0102\1\137\1\140\2\0"+
    "\3\u0102\1\140\1\144\1\145\14\0\1\140\1\145\6\0"+
    "\1\140\2\0\1\140\7\0\1\140\46\0\2\266\3\0"+
    "\3\266\1\140\26\0\1\140\2\0\1\140\7\0\1\140"+
    "\46\0\2\266\3\0\3\266\107\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\1\u0103\46\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\3\16\1\u0104"+
    "\43\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\1\u0105\46\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\10\16\1\u0106\36\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\3\16\1\u0107\43\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\2\16\1\u0108\44\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\1\u0109\46\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\7\16\1\u010a\37\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\10\16\1\204\36\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\3\16\1\u010b\43\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\15\16\1\u010c\31\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\5\16\1\u010d\41\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\4\16\1\u010e\42\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\10\16\1\210\36\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\3\16\1\314\43\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\11\16\1\u010f\35\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\6\16\1\u0110\1\16\1\u0111\36\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\2\16\1\204"+
    "\44\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\16\16\1\u0112\30\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\5\16\1\u0113"+
    "\41\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\2\16\1\u010e\1\u0114\43\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\2\16"+
    "\1\312\44\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\24\16\1\204\22\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\20\16"+
    "\1\204\26\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\10\16\1\u0115\36\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\15\16"+
    "\1\u0116\31\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\7\16\1\204\37\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\3\16"+
    "\1\u0117\43\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\10\16\1\u0118\36\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\6\16"+
    "\1\305\1\u0119\37\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\1\16\1\342\45\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\1\u011a\46\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\1\u010e\46\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\1\u011b\46\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\12\16\1\u011c\34\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\3\16\1\u011d\43\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\11\16\1\u011e\13\16\1\u011f\21\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\7\16"+
    "\1\u010b\37\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\6\16\1\204\40\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\1\u0120"+
    "\46\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\17\16\1\204\27\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\7\16\1\301"+
    "\37\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\7\16\1\u0121\37\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\10\16\1\u0122"+
    "\36\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\23\16\1\u0123\23\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\2\16\1\u0124"+
    "\44\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\11\16\1\u0125\35\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\4\16\1\u0126"+
    "\42\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\1\16\1\u0127\45\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\10\16\1\u0128"+
    "\36\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\3\16\1\u0129\43\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\10\16\1\u012a"+
    "\36\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\10\16\1\u012b\36\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\10\16\1\u012c"+
    "\36\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\15\16\1\u012d\31\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\15\16\1\u012e"+
    "\31\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\16\16\1\u012f\30\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\4\16\1\u0105"+
    "\42\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\17\16\1\u0122\27\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\16\16\1\u0130"+
    "\30\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\1\u0131\46\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\7\16\1\u0132\37\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\1\16\1\u0133\45\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\12\16\1\u0134\34\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\6\16\1\u0135\1\16\1\u0136\36\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\10\16"+
    "\1\u0137\36\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\3\16\1\u0138\5\16\1\u0139\35\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\16\16\1\u013a\30\16\21\0\1\16\4\261\1\260"+
    "\1\377\113\261\10\0\2\u013b\1\140\1\0\5\u013b\1\0"+
    "\1\u013b\5\0\2\u013b\3\0\1\u013b\1\0\1\140\1\u013b"+
    "\6\0\1\u013b\2\0\1\u013b\5\0\3\u013b\46\0\1\u013c"+
    "\1\137\1\140\2\0\3\u013c\1\140\1\144\1\145\14\0"+
    "\1\140\1\145\6\0\1\140\2\0\1\140\7\0\1\140"+
    "\44\0\13\16\1\0\1\16\2\0\1\16\2\0\13\16"+
    "\1\u013d\33\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\14\16\1\u013e\32\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\3\16"+
    "\1\u0122\43\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\23\16\1\u013f\23\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\4\16"+
    "\1\u0140\42\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\10\16\1\305\36\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\12\16"+
    "\1\204\34\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\10\16\1\u0141\36\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\15\16"+
    "\1\u0142\31\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\5\16\1\u0143\41\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\14\16"+
    "\1\u0144\32\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\3\16\1\204\43\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\2\16"+
    "\1\u0145\44\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\26\16\1\u0146\20\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\1\u0147"+
    "\46\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\4\16\1\u0148\42\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\14\16\1\204"+
    "\32\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\15\16\1\u0149\31\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\11\16\1\u014a"+
    "\35\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\25\16\1\301\21\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\1\u014b\46\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\4\16\1\u014c\42\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\10\16\1\u014d\36\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\16\16\1\u014e\30\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\7\16\1\u014f\37\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\1\u0150\46\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\10\16\1\u0151\36\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\3\16\1\u0152\43\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\1\156\46\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\3\16"+
    "\1\220\43\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\10\16\1\u0153\36\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\1\u0154"+
    "\46\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\2\16\1\u0155\44\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\10\16\1\u0156"+
    "\36\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\1\u0157\35\16\1\u0158\10\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\7\16"+
    "\1\344\37\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\24\16\1\u0159\22\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\1\u015a"+
    "\46\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\4\16\1\u015b\17\16\1\u015c\22\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\21\16\1\u015d\25\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\5\16\1\u0105\41\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\11\16\1\u015e\35\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\1\u015f\46\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\4\16"+
    "\1\u0160\42\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\5\16\1\u0161\41\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\3\16"+
    "\1\u0162\43\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\41\16\1\u0163\5\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\10\16"+
    "\1\u0164\36\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\1\u0165\46\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\26\16\1\u0139"+
    "\20\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\1\363\46\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\21\16\1\u0122\25\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\15\16\1\u0166\31\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\1\351\46\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\23\16\1\u0167\23\16\21\0\1\16\10\0\2\u0168\1\140"+
    "\1\0\5\u0168\1\0\1\u0168\5\0\2\u0168\3\0\1\u0168"+
    "\1\0\1\140\1\u0168\6\0\1\u0168\2\0\1\u0168\5\0"+
    "\3\u0168\46\0\1\u0169\1\137\1\140\2\0\3\u0169\1\140"+
    "\1\144\1\145\14\0\1\140\1\145\6\0\1\140\2\0"+
    "\1\140\7\0\1\140\44\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\33\16\1\u016a\13\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\20\16\1\u016b"+
    "\26\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\3\16\1\u016c\43\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\1\u016d\46\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\1\u0148\46\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\5\16\1\204\41\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\3\16\1\u016e\43\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\4\16\1\u016f\42\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\15\16\1\u0170\31\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\17\16\1\u0171\27\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\11\16\1\204\35\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\11\16\1\u0172\35\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\17\16\1\312\27\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\11\16\1\u0173\35\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\22\16\1\u0174\24\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\20\16\1\u0175\26\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\7\16\1\u010e\37\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\7\16\1\u0176\37\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\24\16\1\301\22\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\5\16\1\u0177\41\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\7\16\1\u0148\37\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\1\u0178\46\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\4\16"+
    "\1\u0139\42\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\31\16\1\u0179\6\16\1\u017a\6\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\1\351\37\16\1\u017b\6\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\5\16\1\u017c"+
    "\41\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\10\16\1\u017d\36\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\1\u017e\46\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\11\16\1\u017f\35\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\4\16\1\u0180\42\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\10\16\1\u0181\36\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\34\16\1\u0182\12\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\24\16\1\u0183\22\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\7\16\1\u0184\37\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\15\16\1\u0185\31\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\14\16\1\u0186\32\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\15\16\1\u0187\31\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\6\16\1\u0188\40\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\4\16\1\u0189\42\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\24\16\1\344\22\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\20\16\1\u018a\26\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\23\16\1\u018b\23\16"+
    "\21\0\1\16\10\0\2\u018c\1\140\1\0\5\u018c\1\0"+
    "\1\u018c\5\0\2\u018c\3\0\1\u018c\1\0\1\140\1\u018c"+
    "\6\0\1\u018c\2\0\1\u018c\5\0\3\u018c\46\0\1\u018d"+
    "\1\137\1\140\2\0\3\u018d\1\140\1\144\1\145\14\0"+
    "\1\140\1\145\6\0\1\140\2\0\1\140\7\0\1\140"+
    "\44\0\13\16\1\0\1\16\2\0\1\16\2\0\11\16"+
    "\1\u018e\35\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\10\16\1\u018f\36\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\15\16"+
    "\1\u0190\31\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\5\16\1\u010e\41\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\22\16"+
    "\1\u0191\24\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\6\16\1\u0192\40\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\10\16"+
    "\1\u0193\36\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\2\16\1\u0194\44\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\16\16"+
    "\1\301\30\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\5\16\1\u0195\41\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\1\u0196"+
    "\46\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\10\16\1\u0197\36\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\13\16\1\204"+
    "\33\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\3\16\1\u0198\43\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\11\16\1\u0122"+
    "\35\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\1\u0199\46\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\6\16\1\u019a\40\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\6\16\1\u019b\40\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\3\16\1\u015c\43\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\42\16\1\u019c\4\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\7\16\1\u019d\37\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\3\16\1\u019e\43\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\16\16\1\u019f\30\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\4\16\1\u0122\42\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\16\16\1\u01a0\30\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\30\16\1\u01a1\2\16\1\u016a\13\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\15\16"+
    "\1\u01a2\31\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\3\16\1\u01a3\43\16\21\0\1\16"+
    "\6\0\12\16\1\u01a4\1\0\1\16\2\0\1\16\2\0"+
    "\45\16\1\u01a5\1\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\25\16\1\u01a6\21\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\15\16\1\u01a7\31\16\21\0\1\16\6\0\12\16\1\u01a8"+
    "\1\0\1\16\2\0\1\16\2\0\47\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\10\16"+
    "\1\u01a9\36\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\6\16\1\u01aa\40\16\21\0\1\16"+
    "\10\0\2\u01ab\1\140\1\0\5\u01ab\1\0\1\u01ab\5\0"+
    "\2\u01ab\3\0\1\u01ab\1\0\1\140\1\u01ab\6\0\1\u01ab"+
    "\2\0\1\u01ab\5\0\3\u01ab\46\0\1\u01ac\1\137\1\140"+
    "\2\0\3\u01ac\1\140\1\144\1\145\14\0\1\140\1\145"+
    "\6\0\1\140\2\0\1\140\7\0\1\140\44\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\17\16\1\355\27\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\3\16\1\u01ad\43\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\6\16\1\u01ae\40\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\23\16\1\204\23\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\11\16\1\u01af\35\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\11\16\1\u010e\35\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\1\u01b0\46\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\10\16\1\u01b1\36\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\5\16\1\301\41\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\11\16\1\u01b2\35\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\10\16\1\341\36\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\2\16\1\u01b3\44\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\3\16\1\u01b4\43\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\3\16\1\u01b5\43\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\16\16\1\u01b6\30\16\21\0"+
    "\1\16\6\0\6\16\1\u01b7\4\16\1\0\1\16\2\0"+
    "\1\16\2\0\36\16\1\u01b8\4\16\1\u01b9\3\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\15\16\1\u01ba\31\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\23\16\1\u01bb\23\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\3\16\1\u01bc\43\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\16\16\1\u01bd\30\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\27\16\1\u0139\17\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\13\16\1\u01a9\33\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\15\16\1\u01be\31\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\10\16\1\u01bf\36\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\10\16\1\u01c0\36\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\11\16\1\u01c1\35\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\6\16\1\u01c2\40\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\24\2\0\1\16\2\0\47\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\4\16\1\u01c3"+
    "\42\16\21\0\1\16\10\0\2\u01c4\1\140\1\0\5\u01c4"+
    "\1\0\1\u01c4\5\0\2\u01c4\3\0\1\u01c4\1\0\1\140"+
    "\1\u01c4\6\0\1\u01c4\2\0\1\u01c4\5\0\3\u01c4\46\0"+
    "\1\u01c5\1\137\1\140\2\0\3\u01c5\1\140\1\144\1\145"+
    "\14\0\1\140\1\145\6\0\1\140\2\0\1\140\7\0"+
    "\1\140\44\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\15\16\1\u01c6\31\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\11\16\1\u01c7\35\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\15\16\1\u01c8\31\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\22\16\1\301\24\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\6\16\1\u01c9\40\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\3\16\1\312\43\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\3\16\1\u01a9\43\16\21\0\1\16\6\0\12\16\1\u01ca"+
    "\1\0\1\16\2\0\1\16\2\0\47\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\36\16"+
    "\1\u01cb\10\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\10\16\1\u01cc\36\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\4\16"+
    "\1\u01cd\1\u01ce\41\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\3\16\1\u01cf\43\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\14\16\1\u01d0\32\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\1\u01d1\46\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\3\16"+
    "\1\u01d2\43\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\34\16\1\u01d3\12\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\15\16"+
    "\1\u01d4\4\16\1\u01d5\24\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\10\16\1\u01d6\36\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\3\16\1\u01d7\43\16\21\0\1\16\6\0\6\16"+
    "\1\u01d8\4\16\1\0\1\16\2\0\1\16\2\0\47\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\3\16\1\u01d9\43\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\4\16\1\u01da\42\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\3\16\1\u01db\43\16\21\0\1\16\10\0\2\u01dc"+
    "\1\140\1\0\5\u01dc\1\0\1\u01dc\5\0\2\u01dc\3\0"+
    "\1\u01dc\1\0\1\140\1\u01dc\6\0\1\u01dc\2\0\1\u01dc"+
    "\5\0\3\u01dc\46\0\1\u01dd\1\137\1\140\2\0\3\u01dd"+
    "\1\140\1\144\1\145\14\0\1\140\1\145\6\0\1\140"+
    "\2\0\1\140\7\0\1\140\44\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\5\16\1\u01a9\41\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\27\16"+
    "\1\u0198\17\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\22\16\1\204\24\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\6\16"+
    "\1\u01de\40\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\16\16\1\u01df\30\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\11\16"+
    "\1\u01e0\35\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\24\16\1\u01e1\22\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\5\16"+
    "\1\u01e2\41\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\1\u01e3\46\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\4\16\1\u01e4"+
    "\42\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\3\16\1\u01e5\43\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\10\16\1\u01e6"+
    "\36\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\22\16\1\u01e7\24\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\7\16\1\u01e8"+
    "\37\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\22\16\1\u015c\24\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\7\16\1\u01e6"+
    "\37\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\14\16\1\u01e9\32\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\4\16\1\u01ea"+
    "\42\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\10\16\1\u01eb\36\16\21\0\1\16\6\0"+
    "\13\16\1\0\1\16\2\0\1\16\2\0\20\16\1\u01ec"+
    "\26\16\21\0\1\16\6\0\13\16\1\0\1\16\2\0"+
    "\1\16\2\0\10\16\1\u01ed\36\16\21\0\1\16\10\0"+
    "\2\u01ee\1\140\1\0\5\u01ee\1\0\1\u01ee\5\0\2\u01ee"+
    "\3\0\1\u01ee\1\0\1\140\1\u01ee\6\0\1\u01ee\2\0"+
    "\1\u01ee\5\0\3\u01ee\46\0\1\u01ef\1\137\1\140\2\0"+
    "\3\u01ef\1\140\1\144\1\145\14\0\1\140\1\145\6\0"+
    "\1\140\2\0\1\140\7\0\1\140\44\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\16\16\1\u01f0\30\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\23\16\1\u01f1\23\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\5\16\1\344\41\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\16\16\1\u01f2\30\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\10\16\1\u01f3\36\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\3\16\1\u018a\43\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\10\16\1\u01f4\36\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\15\16\1\u01f5\31\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\17\16\1\u01a9\27\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\30\16\1\u01f6\16\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\17\16\1\u015c\27\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\6\16\1\u01e6\40\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\4\16\1\u01f7\42\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\4\16\1\u01a9\42\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\1\u01b3\46\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\17\16"+
    "\1\u01f8\27\16\21\0\1\16\10\0\2\u01f9\1\140\1\0"+
    "\5\u01f9\1\0\1\u01f9\5\0\2\u01f9\3\0\1\u01f9\1\0"+
    "\1\140\1\u01f9\6\0\1\u01f9\2\0\1\u01f9\5\0\3\u01f9"+
    "\46\0\1\u01fa\1\137\1\140\2\0\3\u01fa\1\140\1\144"+
    "\1\145\14\0\1\140\1\145\6\0\1\140\2\0\1\140"+
    "\7\0\1\140\44\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\11\16\1\u01e6\35\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\23\16\1\u01fb\23\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\20\16\1\u01fc\26\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\2\16\1\u01fd\44\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\1\u01fe\46\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\6\16\1\u01ff\40\16\21\0"+
    "\1\16\6\0\13\16\1\0\1\16\2\0\1\16\2\0"+
    "\6\16\1\u0200\40\16\21\0\1\16\6\0\13\16\1\0"+
    "\1\16\2\0\1\16\2\0\1\u0201\46\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\34\16"+
    "\1\u0202\12\16\21\0\1\16\10\0\2\u0203\1\140\1\0"+
    "\5\u0203\1\0\1\u0203\5\0\2\u0203\3\0\1\u0203\1\0"+
    "\1\140\1\u0203\6\0\1\u0203\2\0\1\u0203\5\0\3\u0203"+
    "\46\0\1\u0204\1\137\1\140\2\0\3\u0204\1\140\1\144"+
    "\1\145\14\0\1\140\1\145\6\0\1\140\2\0\1\140"+
    "\7\0\1\140\44\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\6\16\1\u0205\40\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\10\16\1\u0206\36\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\2\16\1\u01a9\44\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\17\16\1\u0207\27\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\11\16\1\u01a9\35\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\16\16\1\u0208\30\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\13\16\1\u0209\33\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\23\16\1\u020a\23\16"+
    "\21\0\1\16\10\0\2\u020b\1\140\1\0\5\u020b\1\0"+
    "\1\u020b\5\0\2\u020b\3\0\1\u020b\1\0\1\140\1\u020b"+
    "\6\0\1\u020b\2\0\1\u020b\5\0\3\u020b\46\0\1\u020c"+
    "\1\137\1\140\2\0\3\u020c\1\140\1\144\1\145\14\0"+
    "\1\140\1\145\6\0\1\140\2\0\1\140\7\0\1\140"+
    "\44\0\13\16\1\0\1\16\2\0\1\16\2\0\4\16"+
    "\1\u01bb\42\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\11\16\1\u01b3\35\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\36\16"+
    "\1\u01b8\10\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\11\16\1\u020d\35\16\21\0\1\16"+
    "\6\0\13\16\1\0\1\16\2\0\1\16\2\0\36\16"+
    "\1\u020e\10\16\21\0\1\16\6\0\13\16\1\0\1\16"+
    "\2\0\1\16\2\0\10\16\1\u020f\36\16\21\0\1\16"+
    "\10\0\2\u0210\1\140\1\0\5\u0210\1\0\1\u0210\5\0"+
    "\2\u0210\3\0\1\u0210\1\0\1\140\1\u0210\6\0\1\u0210"+
    "\2\0\1\u0210\5\0\3\u0210\46\0\1\u0211\1\137\1\140"+
    "\2\0\3\u0211\1\140\1\144\1\145\14\0\1\140\1\145"+
    "\6\0\1\140\2\0\1\140\7\0\1\140\44\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\17\16\1\u01fd\27\16"+
    "\21\0\1\16\6\0\13\16\1\0\1\16\2\0\1\16"+
    "\2\0\15\16\1\u0212\31\16\21\0\1\16\6\0\13\16"+
    "\1\0\1\16\2\0\1\16\2\0\4\16\1\u01ba\42\16"+
    "\21\0\1\16\10\0\2\u0213\1\140\1\0\5\u0213\1\0"+
    "\1\u0213\5\0\2\u0213\3\0\1\u0213\1\0\1\140\1\u0213"+
    "\6\0\1\u0213\2\0\1\u0213\5\0\3\u0213\46\0\1\u0214"+
    "\1\137\1\140\2\0\3\u0214\1\140\1\144\1\145\14\0"+
    "\1\140\1\145\6\0\1\140\2\0\1\140\7\0\1\140"+
    "\44\0\13\16\1\0\1\16\2\0\1\16\2\0\27\16"+
    "\1\u018a\17\16\21\0\1\16\10\0\2\u0215\1\140\1\0"+
    "\5\u0215\1\0\1\u0215\5\0\2\u0215\3\0\1\u0215\1\0"+
    "\1\140\1\u0215\6\0\1\u0215\2\0\1\u0215\5\0\3\u0215"+
    "\46\0\1\u0216\1\137\1\140\2\0\3\u0216\1\140\1\144"+
    "\1\145\14\0\1\140\1\145\6\0\1\140\2\0\1\140"+
    "\7\0\1\140\46\0\2\u0217\1\140\1\0\5\u0217\1\0"+
    "\1\u0217\5\0\2\u0217\3\0\1\u0217\1\0\1\140\1\u0217"+
    "\6\0\1\u0217\2\0\1\u0217\5\0\3\u0217\46\0\1\u0218"+
    "\1\137\1\140\2\0\3\u0218\1\140\1\144\1\145\14\0"+
    "\1\140\1\145\6\0\1\140\2\0\1\140\7\0\1\140"+
    "\50\0\1\140\24\0\1\140\71\0\1\u0219\1\137\1\140"+
    "\2\0\3\u0219\1\140\1\144\1\145\14\0\1\140\1\145"+
    "\6\0\1\140\2\0\1\140\7\0\1\140\46\0\1\u021a"+
    "\1\137\1\140\2\0\3\u021a\1\140\1\144\1\145\14\0"+
    "\1\140\1\145\6\0\1\140\2\0\1\140\7\0\1\140"+
    "\46\0\1\u021b\1\137\1\140\2\0\3\u021b\1\140\1\144"+
    "\1\145\14\0\1\140\1\145\6\0\1\140\2\0\1\140"+
    "\7\0\1\140\46\0\1\u021c\1\137\1\140\2\0\3\u021c"+
    "\1\140\1\144\1\145\14\0\1\140\1\145\6\0\1\140"+
    "\2\0\1\140\7\0\1\140\46\0\2\137\1\140\2\0"+
    "\3\137\1\140\1\144\1\145\14\0\1\140\1\145\6\0"+
    "\1\140\2\0\1\140\7\0\1\140\36\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[40905];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\11\0\1\11\14\1\1\11\34\1\7\11\10\1\2\11"+
    "\3\1\1\11\2\1\1\11\1\1\2\11\1\1\2\11"+
    "\2\1\1\11\4\1\1\11\1\0\1\1\1\0\3\1"+
    "\1\11\1\0\3\1\1\0\3\1\1\0\75\1\2\11"+
    "\2\1\1\11\1\0\1\11\1\0\1\1\1\11\1\0"+
    "\5\1\1\0\4\1\1\11\100\1\2\11\2\0\355\1"+
    "\1\0\12\1\1\0\11\1\1\0\7\1\1\0\4\1"+
    "\1\0\2\1\1\0\1\1\1\0\1\1\1\0\5\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[540];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
    /**
     * Default constructor is needed as we will always call the yyreset
     */
    public GroovyLexer() {
        super();
    }

    @Override
    public int yychar() {
        return yychar;
    }

    private static final byte PARAN     = 1;
    private static final byte BRACKET   = 2;
    private static final byte CURLY     = 3;


  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public GroovyLexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  public GroovyLexer(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 2282) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Token yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 26: 
          { yybegin(GSTRING_EXPR); 
                                    // length also includes the trailing quote
                                    int s = tokenStart;
                                    int l = tokenLength;
                                    tokenStart = yychar;
                                    tokenLength = 2;
                                    return token(TokenType.STRING, s, l);
          }
        case 36: break;
        case 18: 
          { yybegin(YYINITIAL); 
                                     // length also includes the trailing quote
                                     return token(TokenType.REGEX, tokenStart, tokenLength + 1);
          }
        case 37: break;
        case 9: 
          { return token(TokenType.OPERATOR, -PARAN);
          }
        case 38: break;
        case 25: 
          { return token(TokenType.KEYWORD);
          }
        case 39: break;
        case 28: 
          { yybegin(YYINITIAL);
                                     return token(TokenType.COMMENT, tokenStart, tokenLength + 2);
          }
        case 40: break;
        case 5: 
          { return token(TokenType.NUMBER);
          }
        case 41: break;
        case 3: 
          { return token(TokenType.OPERATOR);
          }
        case 42: break;
        case 10: 
          { return token(TokenType.OPERATOR,  CURLY);
          }
        case 43: break;
        case 11: 
          { return token(TokenType.OPERATOR, -CURLY);
          }
        case 44: break;
        case 33: 
          { return token(TokenType.REGEX);
          }
        case 45: break;
        case 21: 
          { yybegin(JDOC_TAG);
                                     int start = tokenStart;
                                     tokenStart = yychar;
                                     int len = tokenLength;
                                     tokenLength = 1;
                                     return token(TokenType.COMMENT, start, len);
          }
        case 46: break;
        case 16: 
          { yybegin(YYINITIAL); 
                                    // length also includes the trailing quote
                                    return token(TokenType.STRING, tokenStart, tokenLength + 1);
          }
        case 47: break;
        case 31: 
          { yybegin(ML_STRING);
                                    tokenStart = yychar;
                                    tokenLength = 3;
          }
        case 48: break;
        case 23: 
          { yybegin(ML_STRING);
                                    // length also includes the trailing quote
                                    int s = tokenStart;
                                    int l = tokenLength + 1;
                                    tokenStart = yychar + 1;
                                    tokenLength = 0;
                                    return token(TokenType.STRING2, s, l);
          }
        case 49: break;
        case 14: 
          { tokenLength += yylength();
          }
        case 50: break;
        case 15: 
          { yybegin(YYINITIAL);
          }
        case 51: break;
        case 7: 
          { yybegin(CHARLITERAL); 
                                    tokenStart = yychar; 
                                    tokenLength = 1;
          }
        case 52: break;
        case 17: 
          { yybegin(YYINITIAL); 
                                     // length also includes the trailing quote
                                     return token(TokenType.STRING, tokenStart, tokenLength + 1);
          }
        case 53: break;
        case 34: 
          { return token(TokenType.TYPE);
          }
        case 54: break;
        case 32: 
          { yybegin(YYINITIAL);
                                    // length also includes the trailing quote
                                    return token(TokenType.STRING, tokenStart, tokenLength + 3);
          }
        case 55: break;
        case 2: 
          { /* skip */
          }
        case 56: break;
        case 13: 
          { return token(TokenType.OPERATOR, -BRACKET);
          }
        case 57: break;
        case 8: 
          { return token(TokenType.OPERATOR,  PARAN);
          }
        case 58: break;
        case 4: 
          { return token(TokenType.IDENTIFIER);
          }
        case 59: break;
        case 27: 
          { tokenLength += 2;
          }
        case 60: break;
        case 35: 
          { return token(TokenType.TYPE2);
          }
        case 61: break;
        case 30: 
          { yybegin(JDOC);
                                    tokenStart = yychar;
                                    tokenLength = 3;
          }
        case 62: break;
        case 19: 
          { tokenLength ++;
          }
        case 63: break;
        case 12: 
          { return token(TokenType.OPERATOR,  BRACKET);
          }
        case 64: break;
        case 24: 
          { return token(TokenType.COMMENT);
          }
        case 65: break;
        case 6: 
          { yybegin(STRING); 
                                    tokenStart = yychar; 
                                    tokenLength = 1;
          }
        case 66: break;
        case 29: 
          { yybegin(ML_STRING_EXPR);
                                    // length also includes the trailing quote
                                    int s = tokenStart;
                                    int l = tokenLength;
                                    tokenStart = yychar;
                                    tokenLength = 2;
                                    return token(TokenType.STRING, s, l);
          }
        case 67: break;
        case 22: 
          { yybegin(JDOC);
                                     // length also includes the trailing quote
                                     int start = tokenStart;
                                     tokenStart = yychar;
                                     int len = tokenLength;
                                     tokenLength = 1;
                                     return token(TokenType.COMMENT2, start, len);
          }
        case 68: break;
        case 20: 
          { yybegin(STRING); 
                                    // length also includes the trailing quote
                                    int s = tokenStart;
                                    int l = tokenLength + 1;
                                    tokenStart = yychar + 1;
                                    tokenLength = 0;
                                    return token(TokenType.STRING2, s, l);
          }
        case 69: break;
        case 1: 
          { 
          }
        case 70: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
              {
                return null;
              }
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
